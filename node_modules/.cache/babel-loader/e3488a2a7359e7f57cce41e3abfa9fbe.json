{"ast":null,"code":"var _jsxFileName = \"/Users/Derek/workspace/crypto-visualizer/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport Canvas from './components/Canvas/Canvas';\nimport Menu from './components/Menu/Menu';\nimport './App.css'; // import { useEffect } from 'react';\n\nimport useWebSocket from 'react-use-websocket';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [messageHistory, setMessageHistory] = useState([]);\n  const apiKey = process.env.REACT_APP_API_KEY;\n  const {\n    lastMessage,\n    sendMessage,\n    readyState\n  } = useWebSocket('wss://streamer.cryptocompare.com/v2?api_key=' + apiKey);\n  useEffect(() => {\n    if (lastMessage !== null) {\n      const data = JSON.parse(lastMessage.data);\n      console.log(data);\n\n      if (data.MESSAGE === 'STREAMERWELCOME') {\n        var subRequest = {\n          \"action\": \"SubAdd\",\n          \"subs\": [\"0~Coinbase~BTC~USD\"]\n        };\n        sendMessage(JSON.stringify(subRequest));\n      } // setMessageHistory(previousList => previousList.concat(lastMessage));\n\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [lastMessage]);\n  useEffect(() => {\n    console.log('Connection status is:', readyState.toString());\n  }, [readyState]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Canvas, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"KjHP2kiklJHBYr+HiJM+qWoTJ+g=\", false, function () {\n  return [useWebSocket];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Derek/workspace/crypto-visualizer/src/App.tsx"],"names":["Canvas","Menu","useWebSocket","useEffect","useState","App","messageHistory","setMessageHistory","apiKey","process","env","REACT_APP_API_KEY","lastMessage","sendMessage","readyState","data","JSON","parse","console","log","MESSAGE","subRequest","stringify","toString"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,4BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAO,WAAP,C,CACA;;AACA,OAAOC,YAAP,MAAyC,qBAAzC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCH,QAAQ,CAAC,EAAD,CAApD;AAEA,QAAMI,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA3B;AACA,QAAM;AACJC,IAAAA,WADI;AAEJC,IAAAA,WAFI;AAGJC,IAAAA;AAHI,MAIFZ,YAAY,CAAC,iDAAiDM,MAAlD,CAJhB;AAMAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,WAAW,KAAK,IAApB,EAA0B;AACxB,YAAMG,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWL,WAAW,CAACG,IAAvB,CAAb;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,UAAIA,IAAI,CAACK,OAAL,KAAiB,iBAArB,EAAwC;AACtC,YAAIC,UAAU,GAAG;AACf,oBAAU,QADK;AAEf,kBAAQ,CAAC,oBAAD;AAFO,SAAjB;AAIAR,QAAAA,WAAW,CAACG,IAAI,CAACM,SAAL,CAAeD,UAAf,CAAD,CAAX;AACD,OATuB,CAUxB;;AACD,KAZa,CAahB;;AACC,GAdQ,EAcN,CAACT,WAAD,CAdM,CAAT;AAgBAT,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCL,UAAU,CAACS,QAAX,EAArC;AACD,GAFQ,EAEN,CAACT,UAAD,CAFM,CAAT;AAIA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD;;GApCQT,G;UAQHH,Y;;;KARGG,G;AAsCT,eAAeA,GAAf","sourcesContent":["import Canvas from './components/Canvas/Canvas';\nimport Menu from './components/Menu/Menu';\nimport './App.css';\n// import { useEffect } from 'react';\nimport useWebSocket, { ReadyState } from 'react-use-websocket';\nimport { useEffect, useState } from 'react';\n\nfunction App() {\n  const [messageHistory, setMessageHistory] = useState([] as MessageEvent<any>[])\n\n  const apiKey = process.env.REACT_APP_API_KEY\n  const {\n    lastMessage,\n    sendMessage,\n    readyState\n  } = useWebSocket('wss://streamer.cryptocompare.com/v2?api_key=' + apiKey)\n  \n  useEffect(() => {\n    if (lastMessage !== null) {\n      const data = JSON.parse(lastMessage.data)\n      console.log(data)\n      if (data.MESSAGE === 'STREAMERWELCOME') {\n        var subRequest = {\n          \"action\": \"SubAdd\",\n          \"subs\": [\"0~Coinbase~BTC~USD\"]\n        };\n        sendMessage(JSON.stringify(subRequest))\n      }\n      // setMessageHistory(previousList => previousList.concat(lastMessage));\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [lastMessage])\n\n  useEffect(() => {\n    console.log('Connection status is:', readyState.toString())\n  }, [readyState])\n  \n  return (\n    <>\n      <Canvas />\n      <Menu />\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}