{"ast":null,"code":"var _jsxFileName = \"/Users/Derek/workspace/crypto-visualizer/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport Canvas from './components/Canvas/Canvas';\nimport Menu from './components/Menu/Menu';\nimport './App.css'; // import { useEffect } from 'react';\n\nimport useWebSocket, { ReadyState } from 'react-use-websocket';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [messageHistory, setMessageHistory] = useState([]);\n  const wsBase = process.env.REACT_APP_WS_BASE_URL;\n  const apiKey = process.env.REACT_APP_API_KEY;\n  const {\n    lastMessage,\n    sendMessage,\n    readyState\n  } = useWebSocket(`${wsBase}?api_key=${apiKey}`);\n  useEffect(() => {\n    if (lastMessage !== null) {\n      const data = JSON.parse(lastMessage.data); // console.log(data)\n\n      if (data.MESSAGE === 'STREAMERWELCOME') {\n        console.log('subscribing to channel...');\n        var subRequest = {\n          \"action\": \"SubAdd\",\n          \"subs\": [\"0~Coinbase~BTC~USD\"]\n        };\n        sendMessage(JSON.stringify(subRequest));\n      } else if (data.TYPE === '0') {\n        /* {\n          \"TYPE\": \"0\",\n          \"M\": \"Coinbase\",\n          \"FSYM\": \"BTC\",\n          \"TSYM\": \"USD\",\n          \"F\": \"2\",\n          \"ID\": \"276624700\",\n          \"TS\": 1644085483,\n          \"Q\": 0.00013932,\n          \"P\": 41697.85,\n          \"TOTAL\": 5.809344462,\n          \"RTS\": 1644085484,\n          \"TSNS\": 23000000,\n          \"RTSNS\": 897000000\n        } */\n        const exchange = data.M;\n        const coin = data.FSYM;\n        const price = data.P;\n        const quantity = data.Q;\n        console.log(`${exchange}: ${quantity} ${coin} for $${price}`);\n      } // setMessageHistory(previousList => previousList.concat(lastMessage));\n\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [lastMessage]);\n  useEffect(() => {\n    console.log('Connection is', readyState == ReadyState.OPEN ? 'ACTIVE' : 'INACTIVE');\n  }, [readyState]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Canvas, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"KjHP2kiklJHBYr+HiJM+qWoTJ+g=\", false, function () {\n  return [useWebSocket];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Derek/workspace/crypto-visualizer/src/App.tsx"],"names":["Canvas","Menu","useWebSocket","ReadyState","useEffect","useState","App","messageHistory","setMessageHistory","wsBase","process","env","REACT_APP_WS_BASE_URL","apiKey","REACT_APP_API_KEY","lastMessage","sendMessage","readyState","data","JSON","parse","MESSAGE","console","log","subRequest","stringify","TYPE","exchange","M","coin","FSYM","price","P","quantity","Q","OPEN"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,4BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAO,WAAP,C,CACA;;AACA,OAAOC,YAAP,IAAuBC,UAAvB,QAAyC,qBAAzC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCH,QAAQ,CAAC,EAAD,CAApD;AAEA,QAAMI,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,qBAA3B;AACA,QAAMC,MAAM,GAAGH,OAAO,CAACC,GAAR,CAAYG,iBAA3B;AACA,QAAM;AACJC,IAAAA,WADI;AAEJC,IAAAA,WAFI;AAGJC,IAAAA;AAHI,MAIFf,YAAY,CAAE,GAAEO,MAAO,YAAWI,MAAO,EAA7B,CAJhB;AAMAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,WAAW,KAAK,IAApB,EAA0B;AACxB,YAAMG,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWL,WAAW,CAACG,IAAvB,CAAb,CADwB,CAExB;;AACA,UAAIA,IAAI,CAACG,OAAL,KAAiB,iBAArB,EAAwC;AACtCC,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA,YAAIC,UAAU,GAAG;AACf,oBAAU,QADK;AAEf,kBAAQ,CAAC,oBAAD;AAFO,SAAjB;AAIAR,QAAAA,WAAW,CAACG,IAAI,CAACM,SAAL,CAAeD,UAAf,CAAD,CAAX;AACD,OAPD,MAOO,IAAIN,IAAI,CAACQ,IAAL,KAAc,GAAlB,EAAuB;AAC5B;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQ,cAAMC,QAAQ,GAAGT,IAAI,CAACU,CAAtB;AACA,cAAMC,IAAI,GAAGX,IAAI,CAACY,IAAlB;AACA,cAAMC,KAAK,GAAGb,IAAI,CAACc,CAAnB;AACA,cAAMC,QAAQ,GAAGf,IAAI,CAACgB,CAAtB;AACAZ,QAAAA,OAAO,CAACC,GAAR,CAAa,GAAEI,QAAS,KAAIM,QAAS,IAAGJ,IAAK,SAAQE,KAAM,EAA3D;AACD,OA/BuB,CAgCxB;;AACD,KAlCa,CAmChB;;AACC,GApCQ,EAoCN,CAAChB,WAAD,CApCM,CAAT;AAsCAX,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BN,UAAU,IAAId,UAAU,CAACgC,IAAzB,GAAgC,QAAhC,GAA2C,UAAxE;AACD,GAFQ,EAEN,CAAClB,UAAD,CAFM,CAAT;AAIA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD;;GA3DQX,G;UASHJ,Y;;;KATGI,G;AA6DT,eAAeA,GAAf","sourcesContent":["import Canvas from './components/Canvas/Canvas';\nimport Menu from './components/Menu/Menu';\nimport './App.css';\n// import { useEffect } from 'react';\nimport useWebSocket, { ReadyState } from 'react-use-websocket';\nimport { useEffect, useState } from 'react';\n\nfunction App() {\n  const [messageHistory, setMessageHistory] = useState([] as MessageEvent<any>[])\n\n  const wsBase = process.env.REACT_APP_WS_BASE_URL\n  const apiKey = process.env.REACT_APP_API_KEY\n  const {\n    lastMessage,\n    sendMessage,\n    readyState\n  } = useWebSocket(`${wsBase}?api_key=${apiKey}`)\n  \n  useEffect(() => {\n    if (lastMessage !== null) {\n      const data = JSON.parse(lastMessage.data)\n      // console.log(data)\n      if (data.MESSAGE === 'STREAMERWELCOME') {\n        console.log('subscribing to channel...')\n        var subRequest = {\n          \"action\": \"SubAdd\",\n          \"subs\": [\"0~Coinbase~BTC~USD\"]\n        };\n        sendMessage(JSON.stringify(subRequest))\n      } else if (data.TYPE === '0') {\n        /* {\n          \"TYPE\": \"0\",\n          \"M\": \"Coinbase\",\n          \"FSYM\": \"BTC\",\n          \"TSYM\": \"USD\",\n          \"F\": \"2\",\n          \"ID\": \"276624700\",\n          \"TS\": 1644085483,\n          \"Q\": 0.00013932,\n          \"P\": 41697.85,\n          \"TOTAL\": 5.809344462,\n          \"RTS\": 1644085484,\n          \"TSNS\": 23000000,\n          \"RTSNS\": 897000000\n        } */\n        const exchange = data.M;\n        const coin = data.FSYM;\n        const price = data.P;\n        const quantity = data.Q;\n        console.log(`${exchange}: ${quantity} ${coin} for $${price}`);\n      }\n      // setMessageHistory(previousList => previousList.concat(lastMessage));\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [lastMessage])\n\n  useEffect(() => {\n    console.log('Connection is', readyState == ReadyState.OPEN ? 'ACTIVE' : 'INACTIVE')\n  }, [readyState])\n  \n  return (\n    <>\n      <Canvas />\n      <Menu />\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}