{"ast":null,"code":"\"use strict\";\n/* eslint-disable @typescript-eslint/no-unsafe-call */\n\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SingleCexClient = exports.CexClient = void 0;\n\nconst crypto = __importStar(require(\"crypto\"));\n\nconst BasicClient_1 = require(\"../BasicClient\");\n\nconst BasicMultiClient_1 = require(\"../BasicMultiClient\");\n\nconst Candle_1 = require(\"../Candle\");\n\nconst CandlePeriod_1 = require(\"../CandlePeriod\");\n\nconst Level2Point_1 = require(\"../Level2Point\");\n\nconst Level2Snapshots_1 = require(\"../Level2Snapshots\");\n\nconst NotImplementedFn_1 = require(\"../NotImplementedFn\");\n\nconst Ticker_1 = require(\"../Ticker\");\n\nconst Trade_1 = require(\"../Trade\");\n\nconst Watcher_1 = require(\"../Watcher\");\n\nfunction createSignature(timestamp, apiKey, apiSecret) {\n  const hmac = crypto.createHmac(\"sha256\", apiSecret);\n  hmac.update(timestamp.toString() + apiKey);\n  return hmac.digest(\"hex\");\n}\n\nfunction createAuthToken(apiKey, apiSecret) {\n  const timestamp = Math.floor(Date.now() / 1000);\n  return {\n    key: apiKey,\n    signature: createSignature(timestamp, apiKey, apiSecret),\n    timestamp\n  };\n}\n\nconst multiplier = {\n  ADA: 1e6,\n  ATOM: 1e6,\n  BAT: 1e6,\n  GAS: 1e8,\n  NEO: 1e6,\n  ONT: 1e6,\n  ONG: 1e6,\n  MATIC: 1e6,\n  LINK: 1e6,\n  XTZ: 1e6,\n  BCH: 1e8,\n  BTC: 1e8,\n  BTG: 1e8,\n  BTT: 1e6,\n  DASH: 1e8,\n  ETH: 1e6,\n  GUSD: 1e2,\n  LTC: 1e8,\n  MHC: 1e6,\n  OMG: 1e6,\n  TRX: 1e6,\n  XLM: 1e7,\n  XRP: 1e6,\n  ZEC: 1e8\n};\n\nfunction formatAmount(amount, symbol) {\n  return (parseInt(amount) / multiplier[symbol]).toFixed(8);\n}\n\nclass CexClient extends BasicMultiClient_1.BasicMultiClient {\n  /**\n   * Creates a new CEX.io client using the supplied credentials\n   */\n  constructor(options) {\n    super();\n    this._clients = new Map();\n    this.name = \"CEX_MULTI\";\n    this.options = options;\n    this.hasTickers = true;\n    this.hasTrades = true;\n    this.hasCandles = true;\n    this.hasLevel2Snapshots = true;\n    this.candlePeriod = CandlePeriod_1.CandlePeriod._1m;\n  }\n\n  _createBasicClient(clientArgs) {\n    return new SingleCexClient({ ...this.options,\n      market: clientArgs.market,\n      parent: this\n    });\n  }\n\n}\n\nexports.CexClient = CexClient;\n\nclass SingleCexClient extends BasicClient_1.BasicClient {\n  constructor(_ref) {\n    let {\n      wssPath = \"wss://ws.cex.io/ws\",\n      watcherMs = 900 * 1000,\n      apiKey,\n      apiSecret,\n      market,\n      parent\n    } = _ref;\n    super(wssPath, \"CEX\", undefined, watcherMs);\n    this._sendSubLevel2Updates = NotImplementedFn_1.NotImplementedFn;\n    this._sendUnsubLevel2Updates = NotImplementedFn_1.NotImplementedFn;\n    this._sendSubLevel3Snapshots = NotImplementedFn_1.NotImplementedFn;\n    this._sendUnsubLevel3Snapshots = NotImplementedFn_1.NotImplementedFn;\n    this._sendSubLevel3Updates = NotImplementedFn_1.NotImplementedFn;\n    this._sendUnsubLevel3Updates = NotImplementedFn_1.NotImplementedFn;\n    this._watcher = new Watcher_1.Watcher(this, watcherMs);\n    this.auth = {\n      apiKey,\n      apiSecret\n    };\n    this.market = market;\n    this.hasTickers = true;\n    this.hasTrades = true;\n    this.hasCandles = true;\n    this.hasLevel2Snapshots = true;\n    this.authorized = false;\n    this.parent = parent;\n  }\n\n  get candlePeriod() {\n    return this.parent.candlePeriod;\n  }\n  /**\n   * This method is fired anytime the socket is opened, whether\n   * the first time, or any subsequent reconnects.\n   * Since this is an authenticated feed, we first send an authenticate\n   * request, and the normal subscriptions happen after authentication has\n   * completed in the _onAuthorized method.\n   */\n\n\n  _onConnected() {\n    this._sendAuthorizeRequest();\n  }\n  /**\n   * Trigger after an authorization packet has been successfully received.\n   * This code triggers the usual _onConnected code afterwards.\n   */\n\n\n  _onAuthorized() {\n    this.authorized = true;\n    this.emit(\"authorized\");\n\n    super._onConnected();\n  }\n\n  _sendAuthorizeRequest() {\n    this._wss.send(JSON.stringify({\n      e: \"auth\",\n      auth: createAuthToken(this.auth.apiKey, this.auth.apiSecret)\n    }));\n  }\n\n  _sendPong() {\n    if (this._wss) {\n      this._wss.send(JSON.stringify({\n        e: \"pong\"\n      }));\n    }\n  }\n\n  _sendSubTicker() {\n    if (!this.authorized) return;\n\n    this._wss.send(JSON.stringify({\n      e: \"subscribe\",\n      rooms: [\"tickers\"]\n    }));\n  }\n\n  _sendUnsubTicker() {//\n  }\n\n  _sendSubTrades(remote_id) {\n    if (!this.authorized) return;\n\n    this._wss.send(JSON.stringify({\n      e: \"subscribe\",\n      rooms: [`pair-${remote_id.replace(\"/\", \"-\")}`]\n    }));\n  }\n\n  _sendUnsubTrades() {//\n  }\n\n  _sendSubCandles(remote_id) {\n    if (!this.authorized) return;\n\n    this._wss.send(JSON.stringify({\n      e: \"init-ohlcv\",\n      i: candlePeriod(this.candlePeriod),\n      rooms: [`pair-${remote_id.replace(\"/\", \"-\")}`]\n    }));\n  }\n\n  _sendUnsubCandles() {//\n  }\n\n  _sendSubLevel2Snapshots(remote_id) {\n    if (!this.authorized) return;\n\n    this._wss.send(JSON.stringify({\n      e: \"subscribe\",\n      rooms: [`pair-${remote_id.replace(\"/\", \"-\")}`]\n    }));\n  }\n\n  _sendUnsubLevel2Snapshots() {//\n  }\n\n  _onMessage(raw) {\n    const message = JSON.parse(raw);\n    const {\n      e,\n      data\n    } = message;\n\n    if (e === \"ping\") {\n      this._sendPong();\n\n      return;\n    }\n\n    if (e === \"subscribe\") {\n      if (message.error) {\n        throw new Error(`CEX error: ${JSON.stringify(message)}`);\n      }\n    }\n\n    if (e === \"auth\") {\n      if (data.ok === \"ok\") {\n        this._onAuthorized();\n      } else {\n        throw new Error(\"Authentication error\");\n      }\n\n      return;\n    }\n\n    if (e === \"tick\") {\n      // {\"e\":\"tick\",\"data\":{\"symbol1\":\"BTC\",\"symbol2\":\"USD\",\"price\":\"4244.4\",\"open24\":\"4248.4\",\"volume\":\"935.58669239\"}}\n      const marketId = `${data.symbol1}/${data.symbol2}`;\n\n      const market = this._tickerSubs.get(marketId);\n\n      if (!market) return;\n\n      const ticker = this._constructTicker(data, market);\n\n      this.emit(\"ticker\", ticker, market);\n      return;\n    }\n\n    if (e === \"md\") {\n      const marketId = data.pair.replace(\":\", \"/\");\n\n      const market = this._level2SnapshotSubs.get(marketId);\n\n      if (!market) return;\n\n      const result = this._constructevel2Snapshot(data, market);\n\n      this.emit(\"l2snapshot\", result, market);\n      return;\n    }\n\n    if (e === \"history\") {\n      const marketId = this.market.id;\n\n      const market = this._tradeSubs.get(marketId);\n\n      if (!market) return; // sell/buy:timestamp_ms:amount:price:transaction_id\n\n      for (const rawTrade of data.reverse()) {\n        const tradeData = rawTrade.split(\":\");\n\n        const trade = this._constructTrade(tradeData, market);\n\n        this.emit(\"trade\", trade, market);\n      }\n\n      return;\n    }\n\n    if (e === \"history-update\") {\n      const marketId = this.market.id;\n\n      const market = this._tradeSubs.get(marketId);\n\n      if (this._tradeSubs.has(marketId)) {\n        for (const rawTrade of data) {\n          const trade = this._constructTrade(rawTrade, market);\n\n          this.emit(\"trade\", trade, market);\n        }\n\n        return;\n      }\n    } // ohlcv{period} - why the F*** are there three styles of candles???\n\n\n    if (e === `ohlcv${candlePeriod(this.candlePeriod)}`) {\n      const marketId = message.data.pair.replace(\":\", \"/\");\n\n      const market = this._candleSubs.get(marketId);\n\n      if (!market) return;\n\n      const candle = this._constructCandle(message.data);\n\n      this.emit(\"candle\", candle, market);\n      return;\n    }\n  }\n\n  _constructTicker(data, market) {\n    // {\"e\":\"tick\",\"data\":{\"symbol1\":\"BTC\",\"symbol2\":\"USD\",\"price\":\"4244.4\",\"open24\":\"4248.4\",\"volume\":\"935.58669239\"}}\n    const {\n      open24,\n      price,\n      volume\n    } = data;\n    const change = parseFloat(price) - parseFloat(open24);\n    const changePercent = open24 !== 0 ? (parseFloat(price) - parseFloat(open24)) / parseFloat(open24) * 100 : 0;\n    return new Ticker_1.Ticker({\n      exchange: this.name,\n      base: market.base,\n      quote: market.quote,\n      timestamp: Date.now(),\n      last: price,\n      open: open24,\n      volume: volume,\n      change: change.toFixed(8),\n      changePercent: changePercent.toFixed(8)\n    });\n  }\n\n  _constructevel2Snapshot(msg, market) {\n    const asks = msg.sell.map(p => new Level2Point_1.Level2Point(p[0].toFixed(8), formatAmount(p[1], market.base)));\n    const bids = msg.buy.map(p => new Level2Point_1.Level2Point(p[0].toFixed(8), formatAmount(p[1], market.base)));\n    return new Level2Snapshots_1.Level2Snapshot({\n      exchange: this.name,\n      base: market.base,\n      quote: market.quote,\n      sequenceId: msg.id,\n      asks,\n      bids\n    });\n  }\n\n  _constructTrade(data, market) {\n    //[\"buy\",\"1543967891439\",\"4110282\",\"3928.1\",\"9437977\"]\n    //format: sell/buy, timestamp_ms, amount, price, transaction_id\n    const [side, timestamp_ms, amount, price, tradeId] = data;\n    return new Trade_1.Trade({\n      exchange: this.name,\n      base: market.base,\n      quote: market.quote,\n      tradeId: tradeId,\n      unix: parseInt(timestamp_ms),\n      side: side,\n      price: price,\n      amount: formatAmount(amount, market.base),\n      rawAmount: amount\n    });\n  }\n  /**\n  {\n    e: 'ohlcv1m',\n    data: {\n      pair: 'BTC:USD',\n      time: '1597261140',\n      o: '11566.8',\n      h: '11566.8',\n      l: '11566.8',\n      c: '11566.8',\n      v: 664142,\n      d: 664142\n    }\n  }\n  */\n\n\n  _constructCandle(data) {\n    const ms = Number(data.time) * 1000;\n    return new Candle_1.Candle(ms, data.o, data.h, data.l, data.c, data.v.toFixed(8));\n  }\n\n}\n\nexports.SingleCexClient = SingleCexClient;\n\nfunction candlePeriod(period) {\n  switch (period) {\n    case CandlePeriod_1.CandlePeriod._1m:\n      return \"1m\";\n\n    case CandlePeriod_1.CandlePeriod._3m:\n      return \"3m\";\n\n    case CandlePeriod_1.CandlePeriod._5m:\n      return \"5m\";\n\n    case CandlePeriod_1.CandlePeriod._15m:\n      return \"15m\";\n\n    case CandlePeriod_1.CandlePeriod._30m:\n      return \"30m\";\n\n    case CandlePeriod_1.CandlePeriod._1h:\n      return \"1h\";\n\n    case CandlePeriod_1.CandlePeriod._2h:\n      return \"2h\";\n\n    case CandlePeriod_1.CandlePeriod._4h:\n      return \"4h\";\n\n    case CandlePeriod_1.CandlePeriod._6h:\n      return \"6h\";\n\n    case CandlePeriod_1.CandlePeriod._12h:\n      return \"12h\";\n\n    case CandlePeriod_1.CandlePeriod._1d:\n      return \"1d\";\n\n    case CandlePeriod_1.CandlePeriod._3d:\n      return \"3d\";\n\n    case CandlePeriod_1.CandlePeriod._1w:\n      return \"1w\";\n  }\n}","map":{"version":3,"sources":["/Users/Derek/workspace/crypto-visualizer/node_modules/ccxws/src/exchanges/CexClient.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-unsafe-call */\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n\nimport * as crypto from \"crypto\";\nimport { BasicClient } from \"../BasicClient\";\nimport { BasicMultiClient } from \"../BasicMultiClient\";\nimport { Candle } from \"../Candle\";\nimport { CandlePeriod } from \"../CandlePeriod\";\nimport { IClient } from \"../IClient\";\nimport { Level2Point } from \"../Level2Point\";\nimport { Level2Snapshot } from \"../Level2Snapshots\";\nimport { Market } from \"../Market\";\nimport { NotImplementedFn } from \"../NotImplementedFn\";\nimport { Ticker } from \"../Ticker\";\nimport { Trade } from \"../Trade\";\nimport { Watcher } from \"../Watcher\";\n\nfunction createSignature(timestamp: number, apiKey: string, apiSecret: string) {\n    const hmac = crypto.createHmac(\"sha256\", apiSecret);\n    hmac.update(timestamp.toString() + apiKey);\n    return hmac.digest(\"hex\");\n}\n\nfunction createAuthToken(apiKey: string, apiSecret: string) {\n    const timestamp = Math.floor(Date.now() / 1000);\n    return {\n        key: apiKey,\n        signature: createSignature(timestamp, apiKey, apiSecret),\n        timestamp,\n    };\n}\n\nconst multiplier = {\n    ADA: 1e6,\n    ATOM: 1e6,\n    BAT: 1e6,\n    GAS: 1e8,\n    NEO: 1e6,\n    ONT: 1e6,\n    ONG: 1e6,\n    MATIC: 1e6,\n    LINK: 1e6,\n    XTZ: 1e6,\n    BCH: 1e8,\n    BTC: 1e8,\n    BTG: 1e8,\n    BTT: 1e6,\n    DASH: 1e8,\n    ETH: 1e6,\n    GUSD: 1e2,\n    LTC: 1e8,\n    MHC: 1e6,\n    OMG: 1e6,\n    TRX: 1e6,\n    XLM: 1e7,\n    XRP: 1e6,\n    ZEC: 1e8,\n};\n\nfunction formatAmount(amount: string, symbol: string) {\n    return (parseInt(amount) / multiplier[symbol]).toFixed(8);\n}\n\nexport type CexClientOptions = {\n    apiKey: string;\n    apiSecret: string;\n};\n\nexport class CexClient extends BasicMultiClient {\n    public name: string;\n    public options: CexClientOptions;\n    public candlePeriod: CandlePeriod;\n\n    /**\n     * Creates a new CEX.io client using the supplied credentials\n     */\n    constructor(options: CexClientOptions) {\n        super();\n        this._clients = new Map();\n\n        this.name = \"CEX_MULTI\";\n        this.options = options;\n        this.hasTickers = true;\n        this.hasTrades = true;\n        this.hasCandles = true;\n        this.hasLevel2Snapshots = true;\n        this.candlePeriod = CandlePeriod._1m;\n    }\n\n    protected _createBasicClient(clientArgs: { market: Market }): IClient {\n        return new SingleCexClient({\n            ...this.options,\n            market: clientArgs.market,\n            parent: this,\n        });\n    }\n}\n\nexport class SingleCexClient extends BasicClient {\n    public auth: { apiKey: string; apiSecret: string };\n    public market: Market;\n    public hasTickers: boolean;\n    public hasTrades: boolean;\n    public hasCandles: boolean;\n    public hasLevel2Snapshots: boolean;\n    public authorized: boolean;\n    public parent: CexClient;\n\n    protected _sendSubLevel2Updates = NotImplementedFn;\n    protected _sendUnsubLevel2Updates = NotImplementedFn;\n    protected _sendSubLevel3Snapshots = NotImplementedFn;\n    protected _sendUnsubLevel3Snapshots = NotImplementedFn;\n    protected _sendSubLevel3Updates = NotImplementedFn;\n    protected _sendUnsubLevel3Updates = NotImplementedFn;\n\n    constructor({\n        wssPath = \"wss://ws.cex.io/ws\",\n        watcherMs = 900 * 1000,\n        apiKey,\n        apiSecret,\n        market,\n        parent,\n    }: {\n        wssPath?: string;\n        watcherMs?: number;\n        apiKey: string;\n        apiSecret: string;\n        market: Market;\n        parent: CexClient;\n    }) {\n        super(wssPath, \"CEX\", undefined, watcherMs);\n        this._watcher = new Watcher(this, watcherMs);\n        this.auth = { apiKey, apiSecret };\n        this.market = market;\n        this.hasTickers = true;\n        this.hasTrades = true;\n        this.hasCandles = true;\n        this.hasLevel2Snapshots = true;\n        this.authorized = false;\n        this.parent = parent;\n    }\n\n    public get candlePeriod(): CandlePeriod {\n        return this.parent.candlePeriod;\n    }\n\n    /**\n     * This method is fired anytime the socket is opened, whether\n     * the first time, or any subsequent reconnects.\n     * Since this is an authenticated feed, we first send an authenticate\n     * request, and the normal subscriptions happen after authentication has\n     * completed in the _onAuthorized method.\n     */\n    protected _onConnected() {\n        this._sendAuthorizeRequest();\n    }\n\n    /**\n     * Trigger after an authorization packet has been successfully received.\n     * This code triggers the usual _onConnected code afterwards.\n     */\n    protected _onAuthorized() {\n        this.authorized = true;\n        this.emit(\"authorized\");\n        super._onConnected();\n    }\n\n    protected _sendAuthorizeRequest() {\n        this._wss.send(\n            JSON.stringify({\n                e: \"auth\",\n                auth: createAuthToken(this.auth.apiKey, this.auth.apiSecret),\n            }),\n        );\n    }\n\n    protected _sendPong() {\n        if (this._wss) {\n            this._wss.send(JSON.stringify({ e: \"pong\" }));\n        }\n    }\n\n    protected _sendSubTicker() {\n        if (!this.authorized) return;\n        this._wss.send(\n            JSON.stringify({\n                e: \"subscribe\",\n                rooms: [\"tickers\"],\n            }),\n        );\n    }\n\n    protected _sendUnsubTicker() {\n        //\n    }\n\n    protected _sendSubTrades(remote_id: string) {\n        if (!this.authorized) return;\n        this._wss.send(\n            JSON.stringify({\n                e: \"subscribe\",\n                rooms: [`pair-${remote_id.replace(\"/\", \"-\")}`],\n            }),\n        );\n    }\n\n    protected _sendUnsubTrades() {\n        //\n    }\n\n    protected _sendSubCandles(remote_id: string) {\n        if (!this.authorized) return;\n        this._wss.send(\n            JSON.stringify({\n                e: \"init-ohlcv\",\n                i: candlePeriod(this.candlePeriod),\n                rooms: [`pair-${remote_id.replace(\"/\", \"-\")}`],\n            }),\n        );\n    }\n\n    protected _sendUnsubCandles() {\n        //\n    }\n\n    protected _sendSubLevel2Snapshots(remote_id: string) {\n        if (!this.authorized) return;\n        this._wss.send(\n            JSON.stringify({\n                e: \"subscribe\",\n                rooms: [`pair-${remote_id.replace(\"/\", \"-\")}`],\n            }),\n        );\n    }\n\n    protected _sendUnsubLevel2Snapshots() {\n        //\n    }\n\n    protected _onMessage(raw: any) {\n        const message = JSON.parse(raw);\n        const { e, data } = message;\n\n        if (e === \"ping\") {\n            this._sendPong();\n            return;\n        }\n\n        if (e === \"subscribe\") {\n            if (message.error) {\n                throw new Error(`CEX error: ${JSON.stringify(message)}`);\n            }\n        }\n\n        if (e === \"auth\") {\n            if (data.ok === \"ok\") {\n                this._onAuthorized();\n            } else {\n                throw new Error(\"Authentication error\");\n            }\n            return;\n        }\n\n        if (e === \"tick\") {\n            // {\"e\":\"tick\",\"data\":{\"symbol1\":\"BTC\",\"symbol2\":\"USD\",\"price\":\"4244.4\",\"open24\":\"4248.4\",\"volume\":\"935.58669239\"}}\n            const marketId = `${data.symbol1}/${data.symbol2}`;\n            const market = this._tickerSubs.get(marketId);\n            if (!market) return;\n\n            const ticker = this._constructTicker(data, market);\n            this.emit(\"ticker\", ticker, market);\n            return;\n        }\n\n        if (e === \"md\") {\n            const marketId = data.pair.replace(\":\", \"/\");\n            const market = this._level2SnapshotSubs.get(marketId);\n            if (!market) return;\n\n            const result = this._constructevel2Snapshot(data, market);\n            this.emit(\"l2snapshot\", result, market);\n            return;\n        }\n\n        if (e === \"history\") {\n            const marketId = this.market.id;\n            const market = this._tradeSubs.get(marketId);\n            if (!market) return;\n\n            // sell/buy:timestamp_ms:amount:price:transaction_id\n            for (const rawTrade of data.reverse()) {\n                const tradeData = rawTrade.split(\":\");\n                const trade = this._constructTrade(tradeData, market);\n                this.emit(\"trade\", trade, market);\n            }\n            return;\n        }\n\n        if (e === \"history-update\") {\n            const marketId = this.market.id;\n            const market = this._tradeSubs.get(marketId);\n            if (this._tradeSubs.has(marketId)) {\n                for (const rawTrade of data) {\n                    const trade = this._constructTrade(rawTrade, market);\n                    this.emit(\"trade\", trade, market);\n                }\n                return;\n            }\n        }\n\n        // ohlcv{period} - why the F*** are there three styles of candles???\n        if (e === `ohlcv${candlePeriod(this.candlePeriod)}`) {\n            const marketId = message.data.pair.replace(\":\", \"/\");\n            const market = this._candleSubs.get(marketId);\n            if (!market) return;\n\n            const candle = this._constructCandle(message.data);\n            this.emit(\"candle\", candle, market);\n            return;\n        }\n    }\n\n    protected _constructTicker(data: any, market: Market) {\n        // {\"e\":\"tick\",\"data\":{\"symbol1\":\"BTC\",\"symbol2\":\"USD\",\"price\":\"4244.4\",\"open24\":\"4248.4\",\"volume\":\"935.58669239\"}}\n        const { open24, price, volume } = data;\n        const change = parseFloat(price) - parseFloat(open24);\n        const changePercent =\n            open24 !== 0\n                ? ((parseFloat(price) - parseFloat(open24)) / parseFloat(open24)) * 100\n                : 0;\n\n        return new Ticker({\n            exchange: this.name,\n            base: market.base,\n            quote: market.quote,\n            timestamp: Date.now(),\n            last: price,\n            open: open24,\n            volume: volume,\n            change: change.toFixed(8),\n            changePercent: changePercent.toFixed(8),\n        });\n    }\n\n    protected _constructevel2Snapshot(msg: any, market: Market) {\n        const asks = msg.sell.map(\n            p => new Level2Point(p[0].toFixed(8), formatAmount(p[1], market.base)),\n        );\n        const bids = msg.buy.map(\n            p => new Level2Point(p[0].toFixed(8), formatAmount(p[1], market.base)),\n        );\n\n        return new Level2Snapshot({\n            exchange: this.name,\n            base: market.base,\n            quote: market.quote,\n            sequenceId: msg.id,\n            asks,\n            bids,\n        });\n    }\n\n    protected _constructTrade(data: any, market: Market) {\n        //[\"buy\",\"1543967891439\",\"4110282\",\"3928.1\",\"9437977\"]\n        //format: sell/buy, timestamp_ms, amount, price, transaction_id\n        const [side, timestamp_ms, amount, price, tradeId] = data;\n\n        return new Trade({\n            exchange: this.name,\n            base: market.base,\n            quote: market.quote,\n            tradeId: tradeId,\n            unix: parseInt(timestamp_ms),\n            side: side,\n            price: price,\n            amount: formatAmount(amount, market.base),\n            rawAmount: amount,\n        });\n    }\n\n    /**\n   {\n      e: 'ohlcv1m',\n      data: {\n        pair: 'BTC:USD',\n        time: '1597261140',\n        o: '11566.8',\n        h: '11566.8',\n        l: '11566.8',\n        c: '11566.8',\n        v: 664142,\n        d: 664142\n      }\n    }\n   */\n    protected _constructCandle(data) {\n        const ms = Number(data.time) * 1000;\n        return new Candle(ms, data.o, data.h, data.l, data.c, data.v.toFixed(8));\n    }\n}\n\nfunction candlePeriod(period) {\n    switch (period) {\n        case CandlePeriod._1m:\n            return \"1m\";\n        case CandlePeriod._3m:\n            return \"3m\";\n        case CandlePeriod._5m:\n            return \"5m\";\n        case CandlePeriod._15m:\n            return \"15m\";\n        case CandlePeriod._30m:\n            return \"30m\";\n        case CandlePeriod._1h:\n            return \"1h\";\n        case CandlePeriod._2h:\n            return \"2h\";\n        case CandlePeriod._4h:\n            return \"4h\";\n        case CandlePeriod._6h:\n            return \"6h\";\n        case CandlePeriod._12h:\n            return \"12h\";\n        case CandlePeriod._1d:\n            return \"1d\";\n        case CandlePeriod._3d:\n            return \"3d\";\n        case CandlePeriod._1w:\n            return \"1w\";\n    }\n}\n"]},"metadata":{},"sourceType":"script"}