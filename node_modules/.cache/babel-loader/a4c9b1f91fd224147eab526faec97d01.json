{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BithumbClient = void 0;\n/* eslint-disable @typescript-eslint/no-unsafe-call */\n\n/* eslint-disable @typescript-eslint/restrict-plus-operands */\n\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n\nconst moment_1 = __importDefault(require(\"moment\"));\n\nconst BasicClient_1 = require(\"../BasicClient\");\n\nconst Debounce_1 = require(\"../flowcontrol/Debounce\");\n\nconst Throttle_1 = require(\"../flowcontrol/Throttle\");\n\nconst Level2Point_1 = require(\"../Level2Point\");\n\nconst Level2Snapshots_1 = require(\"../Level2Snapshots\");\n\nconst Level2Update_1 = require(\"../Level2Update\");\n\nconst Ticker_1 = require(\"../Ticker\");\n\nconst Trade_1 = require(\"../Trade\");\n\nconst https = __importStar(require(\"../Https\"));\n\nconst NotImplementedFn_1 = require(\"../NotImplementedFn\");\n\nclass BithumbClient extends BasicClient_1.BasicClient {\n  constructor() {\n    let {\n      wssPath = \"wss://pubwss.bithumb.com/pub/ws\",\n      watcherMs\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super(wssPath, \"Bithumb\", undefined, watcherMs);\n    this._sendSubTicker = NotImplementedFn_1.NotImplementedFn;\n    this._sendSubCandles = NotImplementedFn_1.NotImplementedFn;\n    this._sendUnsubCandles = NotImplementedFn_1.NotImplementedFn;\n    this._sendSubTrades = NotImplementedFn_1.NotImplementedFn;\n    this._sendSubLevel2Snapshots = NotImplementedFn_1.NotImplementedFn;\n    this._sendUnsubLevel2Snapshots = NotImplementedFn_1.NotImplementedFn;\n    this._sendSubLevel2Updates = NotImplementedFn_1.NotImplementedFn;\n    this._sendSubLevel3Snapshots = NotImplementedFn_1.NotImplementedFn;\n    this._sendUnsubLevel3Snapshots = NotImplementedFn_1.NotImplementedFn;\n    this._sendSubLevel3Updates = NotImplementedFn_1.NotImplementedFn;\n    this._sendUnsubLevel3Updates = NotImplementedFn_1.NotImplementedFn;\n    this._restL2SnapshotPath = \"https://api.bithumb.com/public/orderbook\";\n    this.hasTickers = true;\n    this.hasTrades = true;\n    this.hasLevel2Updates = true;\n    this.remoteIdMap = new Map();\n    this.restThrottleMs = 50;\n    this._requestLevel2Snapshot = (0, Throttle_1.throttle)(this.__requestLevel2Snapshot.bind(this), this.restThrottleMs); // prettier-ignore\n\n    this._sendSubTicker = (0, Debounce_1.debounce)(this.__sendSubTicker.bind(this));\n    this._sendSubTrades = (0, Debounce_1.debounce)(this.__sendSubTrades.bind(this));\n    this._sendSubLevel2Updates = (0, Debounce_1.debounce)(this.__sendSubLevel2Updates.bind(this));\n  }\n\n  __sendSubTicker() {\n    const symbols = Array.from(this._tickerSubs.keys());\n\n    this._wss.send(JSON.stringify({\n      type: \"ticker\",\n      symbols,\n      tickTypes: [\"24H\"]\n    }));\n  }\n\n  _sendUnsubTicker() {//\n  }\n\n  __sendSubTrades() {\n    const symbols = Array.from(this._tradeSubs.keys());\n\n    this._wss.send(JSON.stringify({\n      type: \"transaction\",\n      symbols\n    }));\n  }\n\n  _sendUnsubTrades() {//\n  }\n\n  __sendSubLevel2Updates() {\n    const symbols = Array.from(this._level2UpdateSubs.keys());\n\n    for (const symbol of symbols) {\n      this._requestLevel2Snapshot(this._level2UpdateSubs.get(symbol));\n    }\n\n    this._wss.send(JSON.stringify({\n      type: \"orderbookdepth\",\n      symbols\n    }));\n  }\n\n  _sendUnsubLevel2Updates() {//\n  }\n\n  _onMessage(raw) {\n    const msg = JSON.parse(raw); // console.log(raw);\n    // tickers\n\n    if (msg.type === \"ticker\") {\n      const remoteId = msg.content.symbol;\n\n      const market = this._tickerSubs.get(remoteId);\n\n      if (!market) return;\n\n      const ticker = this._constructTicker(msg.content, market);\n\n      this.emit(\"ticker\", ticker, market);\n      return;\n    } // trades\n\n\n    if (msg.type === \"transaction\") {\n      for (const datum of msg.content.list) {\n        const remoteId = datum.symbol;\n\n        const market = this._tradeSubs.get(remoteId);\n\n        if (!market) return;\n\n        const trade = this._constructTrade(datum, market);\n\n        this.emit(\"trade\", trade, market);\n      }\n\n      return;\n    } // l2pudate\n\n\n    if (msg.type === \"orderbookdepth\") {\n      const remoteId = msg.content.list[0].symbol;\n\n      const market = this._level2UpdateSubs.get(remoteId);\n\n      if (!market) return;\n\n      const update = this._constructL2Update(msg, market);\n\n      this.emit(\"l2update\", update, market);\n      return;\n    }\n  }\n  /**\n  {\n    \"type\":\"ticker\",\n    \"content\":{\n      \"tickType\":\"24H\",\n      \"date\":\"20200814\",\n      \"time\":\"063809\",\n      \"openPrice\":\"13637000\",\n      \"closePrice\":\"13714000\",\n      \"lowPrice\":\"13360000\",\n      \"highPrice\":\"13779000\",\n      \"value\":\"63252021221.2101\",\n      \"volume\":\"4647.44384349\",\n      \"sellVolume\":\"2372.30829641\",\n      \"buyVolume\":\"2275.03363265\",\n      \"prevClosePrice\":\"13601000\",\n      \"chgRate\":\"0.56\",\n      \"chgAmt\":\"77000\",\n      \"volumePower\":\"95.89\",\n      \"symbol\":\"BTC_KRW\"\n    }\n  }\n  */\n\n\n  _constructTicker(data, market) {\n    const timestamp = moment_1.default.parseZone(data.date + data.time + \"+09:00\", \"YYYYMMDDhhmmssZ\").valueOf();\n    return new Ticker_1.Ticker({\n      exchange: this.name,\n      base: market.base,\n      quote: market.quote,\n      timestamp,\n      last: data.closePrice,\n      open: data.openPrice,\n      high: data.highPrice,\n      low: data.lowPrice,\n      volume: data.volume,\n      quoteVolume: data.value,\n      change: data.chgAmt,\n      changePercent: data.chgRate\n    });\n  }\n  /**\n  {\n   \"type\":\"transaction\",\n   \"content\":\n   {\n     \"list\":\n     [\n       {\n        \"buySellGb\":\"1\",\n        \"contPrice\":\"485900\",\n        \"contQty\":\"0.196\",\n        \"contAmt\":\"95236.400\",\n        \"contDtm\":\"2020-08-14 06:28:41.621909\",\n        \"updn\":\"dn\",\n        \"symbol\":\"ETH_KRW\"\n      },\n      {\n        \"buySellGb\":\"2\",\n        \"contPrice\":\"486400\",\n        \"contQty\":\"5.4277\",\n        \"contAmt\":\"2640033.2800\",\n        \"contDtm\":\"2020-08-14 06:28:42.453539\",\n        \"updn\":\"up\",\n        \"symbol\":\"ETH_KRW\"\n      }\n    ]\n  }\n  }\n  */\n\n\n  _constructTrade(datum, market) {\n    const unix = moment_1.default.parseZone(datum.contDtm + \"+09:00\", \"YYYY-MM-DD hh:mm:ss.SSSSSS\").valueOf();\n    const side = datum.buySellGb == 1 ? \"buy\" : \"sell\";\n    const price = datum.contPrice;\n    const amount = datum.contQty;\n    return new Trade_1.Trade({\n      exchange: this.name,\n      base: market.base,\n      quote: market.quote,\n      side,\n      unix,\n      price,\n      amount\n    });\n  }\n  /**\n  {\n    \"type\": \"orderbookdepth\",\n    \"content\": {\n      \"list\": [\n        {\n          \"symbol\": \"BTC_KRW\",\n          \"orderType\": \"ask\",\n          \"price\": \"13811000\",\n          \"quantity\": \"0\",\n          \"total\": \"0\"\n        },\n        {\n          \"symbol\": \"BTC_KRW\",\n          \"orderType\": \"ask\",\n          \"price\": \"13733000\",\n          \"quantity\": \"0.0213\",\n          \"total\": \"1\"\n        },\n        {\n          \"symbol\": \"BTC_KRW\",\n          \"orderType\": \"bid\",\n          \"price\": \"6558000\",\n          \"quantity\": \"0\",\n          \"total\": \"0\"\n        },\n        {\n          \"symbol\": \"BTC_KRW\",\n          \"orderType\": \"bid\",\n          \"price\": \"13728000\",\n          \"quantity\": \"0.0185\",\n          \"total\": \"1\"\n        }\n      ],\n      \"datetime\": \"1597355189967132\"\n    }\n  }\n  */\n\n\n  _constructL2Update(msg, market) {\n    const timestampMs = Math.trunc(Number(msg.content.datetime) / 1000);\n    const asks = [];\n    const bids = [];\n\n    for (const data of msg.content.list) {\n      const point = new Level2Point_1.Level2Point(data.price, data.quantity, data.total);\n      if (data.orderType === \"bid\") bids.push(point);else asks.push(point);\n    }\n\n    return new Level2Update_1.Level2Update({\n      exchange: this.name,\n      base: market.base,\n      quote: market.quote,\n      timestampMs,\n      asks,\n      bids,\n      datetime: msg.content.datetime\n    });\n  }\n\n  async __requestLevel2Snapshot(market) {\n    let failed = false;\n\n    try {\n      const remote_id = market.id;\n      const uri = `${this._restL2SnapshotPath}/${remote_id}`;\n      const raw = await https.get(uri);\n      const timestampMs = Number(raw.data.timestamp);\n      const asks = raw.data.asks.map(p => new Level2Point_1.Level2Point(p.price, p.quantity));\n      const bids = raw.data.bids.map(p => new Level2Point_1.Level2Point(p.price, p.quantity));\n      const snapshot = new Level2Snapshots_1.Level2Snapshot({\n        exchange: this.name,\n        base: market.base,\n        quote: market.quote,\n        timestampMs,\n        asks,\n        bids\n      });\n      this.emit(\"l2snapshot\", snapshot, market);\n    } catch (ex) {\n      this.emit(\"error\", ex);\n      failed = true;\n    } finally {\n      if (failed) this._requestLevel2Snapshot(market);\n    }\n  }\n\n}\n\nexports.BithumbClient = BithumbClient;","map":{"version":3,"sources":["/Users/Derek/workspace/crypto-visualizer/node_modules/ccxws/src/exchanges/BithumbClient.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-unsafe-call */\n/* eslint-disable @typescript-eslint/restrict-plus-operands */\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport moment from \"moment\";\nimport { BasicClient } from \"../BasicClient\";\nimport { ClientOptions } from \"../ClientOptions\";\nimport { debounce } from \"../flowcontrol/Debounce\";\nimport { CancelableFn } from \"../flowcontrol/Fn\";\nimport { throttle } from \"../flowcontrol/Throttle\";\nimport { Level2Point } from \"../Level2Point\";\nimport { Level2Snapshot } from \"../Level2Snapshots\";\nimport { Level2Update } from \"../Level2Update\";\nimport { Market } from \"../Market\";\nimport { Ticker } from \"../Ticker\";\nimport { Trade } from \"../Trade\";\nimport * as https from \"../Https\";\nimport { NotImplementedFn } from \"../NotImplementedFn\";\n\nexport class BithumbClient extends BasicClient {\n    public remoteIdMap: Map<string, string>;\n    public restThrottleMs: number;\n\n    protected _restL2SnapshotPath: string;\n    protected _requestLevel2Snapshot: CancelableFn;\n\n    protected _sendSubTicker = NotImplementedFn;\n    protected _sendSubCandles = NotImplementedFn;\n    protected _sendUnsubCandles = NotImplementedFn;\n    protected _sendSubTrades = NotImplementedFn;\n    protected _sendSubLevel2Snapshots = NotImplementedFn;\n    protected _sendUnsubLevel2Snapshots = NotImplementedFn;\n    protected _sendSubLevel2Updates = NotImplementedFn;\n    protected _sendSubLevel3Snapshots = NotImplementedFn;\n    protected _sendUnsubLevel3Snapshots = NotImplementedFn;\n    protected _sendSubLevel3Updates = NotImplementedFn;\n    protected _sendUnsubLevel3Updates = NotImplementedFn;\n\n    constructor({ wssPath = \"wss://pubwss.bithumb.com/pub/ws\", watcherMs }: ClientOptions = {}) {\n        super(wssPath, \"Bithumb\", undefined, watcherMs);\n        this._restL2SnapshotPath = \"https://api.bithumb.com/public/orderbook\";\n        this.hasTickers = true;\n        this.hasTrades = true;\n        this.hasLevel2Updates = true;\n        this.remoteIdMap = new Map();\n\n        this.restThrottleMs = 50;\n\n        this._requestLevel2Snapshot = throttle(this.__requestLevel2Snapshot.bind(this), this.restThrottleMs); // prettier-ignore\n        this._sendSubTicker = debounce(this.__sendSubTicker.bind(this));\n        this._sendSubTrades = debounce(this.__sendSubTrades.bind(this));\n        this._sendSubLevel2Updates = debounce(this.__sendSubLevel2Updates.bind(this));\n    }\n\n    protected __sendSubTicker() {\n        const symbols = Array.from(this._tickerSubs.keys());\n        this._wss.send(\n            JSON.stringify({\n                type: \"ticker\",\n                symbols,\n                tickTypes: [\"24H\"],\n            }),\n        );\n    }\n\n    protected _sendUnsubTicker() {\n        //\n    }\n\n    protected __sendSubTrades() {\n        const symbols = Array.from(this._tradeSubs.keys());\n        this._wss.send(\n            JSON.stringify({\n                type: \"transaction\",\n                symbols,\n            }),\n        );\n    }\n\n    protected _sendUnsubTrades() {\n        //\n    }\n\n    protected __sendSubLevel2Updates() {\n        const symbols = Array.from(this._level2UpdateSubs.keys());\n        for (const symbol of symbols) {\n            this._requestLevel2Snapshot(this._level2UpdateSubs.get(symbol));\n        }\n        this._wss.send(\n            JSON.stringify({\n                type: \"orderbookdepth\",\n                symbols,\n            }),\n        );\n    }\n\n    protected _sendUnsubLevel2Updates() {\n        //\n    }\n\n    protected _onMessage(raw: string) {\n        const msg = JSON.parse(raw) as any;\n\n        // console.log(raw);\n\n        // tickers\n        if (msg.type === \"ticker\") {\n            const remoteId = msg.content.symbol;\n            const market = this._tickerSubs.get(remoteId);\n            if (!market) return;\n\n            const ticker = this._constructTicker(msg.content, market);\n            this.emit(\"ticker\", ticker, market);\n            return;\n        }\n\n        // trades\n        if (msg.type === \"transaction\") {\n            for (const datum of msg.content.list) {\n                const remoteId = datum.symbol;\n                const market = this._tradeSubs.get(remoteId);\n                if (!market) return;\n\n                const trade = this._constructTrade(datum, market);\n                this.emit(\"trade\", trade, market);\n            }\n            return;\n        }\n\n        // l2pudate\n        if (msg.type === \"orderbookdepth\") {\n            const remoteId = msg.content.list[0].symbol;\n            const market = this._level2UpdateSubs.get(remoteId);\n            if (!market) return;\n\n            const update = this._constructL2Update(msg, market);\n            this.emit(\"l2update\", update, market);\n            return;\n        }\n    }\n\n    /**\n    {\n      \"type\":\"ticker\",\n      \"content\":{\n        \"tickType\":\"24H\",\n        \"date\":\"20200814\",\n        \"time\":\"063809\",\n        \"openPrice\":\"13637000\",\n        \"closePrice\":\"13714000\",\n        \"lowPrice\":\"13360000\",\n        \"highPrice\":\"13779000\",\n        \"value\":\"63252021221.2101\",\n        \"volume\":\"4647.44384349\",\n        \"sellVolume\":\"2372.30829641\",\n        \"buyVolume\":\"2275.03363265\",\n        \"prevClosePrice\":\"13601000\",\n        \"chgRate\":\"0.56\",\n        \"chgAmt\":\"77000\",\n        \"volumePower\":\"95.89\",\n        \"symbol\":\"BTC_KRW\"\n      }\n    }\n   */\n    protected _constructTicker(data: any, market: Market) {\n        const timestamp = moment\n            .parseZone(data.date + data.time + \"+09:00\", \"YYYYMMDDhhmmssZ\")\n            .valueOf();\n        return new Ticker({\n            exchange: this.name,\n            base: market.base,\n            quote: market.quote,\n            timestamp,\n            last: data.closePrice,\n            open: data.openPrice,\n            high: data.highPrice,\n            low: data.lowPrice,\n            volume: data.volume,\n            quoteVolume: data.value,\n            change: data.chgAmt,\n            changePercent: data.chgRate,\n        });\n    }\n\n    /**\n   {\n     \"type\":\"transaction\",\n     \"content\":\n     {\n       \"list\":\n       [\n         {\n          \"buySellGb\":\"1\",\n          \"contPrice\":\"485900\",\n          \"contQty\":\"0.196\",\n          \"contAmt\":\"95236.400\",\n          \"contDtm\":\"2020-08-14 06:28:41.621909\",\n          \"updn\":\"dn\",\n          \"symbol\":\"ETH_KRW\"\n        },\n        {\n          \"buySellGb\":\"2\",\n          \"contPrice\":\"486400\",\n          \"contQty\":\"5.4277\",\n          \"contAmt\":\"2640033.2800\",\n          \"contDtm\":\"2020-08-14 06:28:42.453539\",\n          \"updn\":\"up\",\n          \"symbol\":\"ETH_KRW\"\n        }\n      ]\n    }\n  }\n   */\n    protected _constructTrade(datum: any, market: Market) {\n        const unix = moment\n            .parseZone(datum.contDtm + \"+09:00\", \"YYYY-MM-DD hh:mm:ss.SSSSSS\")\n            .valueOf();\n        const side = datum.buySellGb == 1 ? \"buy\" : \"sell\";\n        const price = datum.contPrice;\n        const amount = datum.contQty;\n        return new Trade({\n            exchange: this.name,\n            base: market.base,\n            quote: market.quote,\n            side,\n            unix,\n            price,\n            amount,\n        });\n    }\n\n    /**\n   {\n      \"type\": \"orderbookdepth\",\n      \"content\": {\n        \"list\": [\n          {\n            \"symbol\": \"BTC_KRW\",\n            \"orderType\": \"ask\",\n            \"price\": \"13811000\",\n            \"quantity\": \"0\",\n            \"total\": \"0\"\n          },\n          {\n            \"symbol\": \"BTC_KRW\",\n            \"orderType\": \"ask\",\n            \"price\": \"13733000\",\n            \"quantity\": \"0.0213\",\n            \"total\": \"1\"\n          },\n          {\n            \"symbol\": \"BTC_KRW\",\n            \"orderType\": \"bid\",\n            \"price\": \"6558000\",\n            \"quantity\": \"0\",\n            \"total\": \"0\"\n          },\n          {\n            \"symbol\": \"BTC_KRW\",\n            \"orderType\": \"bid\",\n            \"price\": \"13728000\",\n            \"quantity\": \"0.0185\",\n            \"total\": \"1\"\n          }\n        ],\n        \"datetime\": \"1597355189967132\"\n      }\n    }\n   */\n    protected _constructL2Update(msg, market) {\n        const timestampMs = Math.trunc(Number(msg.content.datetime) / 1000);\n\n        const asks = [];\n        const bids = [];\n\n        for (const data of msg.content.list) {\n            const point = new Level2Point(data.price, data.quantity, data.total);\n            if (data.orderType === \"bid\") bids.push(point);\n            else asks.push(point);\n        }\n\n        return new Level2Update({\n            exchange: this.name,\n            base: market.base,\n            quote: market.quote,\n            timestampMs,\n            asks,\n            bids,\n            datetime: msg.content.datetime,\n        });\n    }\n\n    protected async __requestLevel2Snapshot(market: Market) {\n        let failed = false;\n        try {\n            const remote_id = market.id;\n            const uri = `${this._restL2SnapshotPath}/${remote_id}`;\n            const raw = (await https.get(uri)) as any;\n            const timestampMs = Number(raw.data.timestamp);\n            const asks = raw.data.asks.map(p => new Level2Point(p.price, p.quantity));\n            const bids = raw.data.bids.map(p => new Level2Point(p.price, p.quantity));\n            const snapshot = new Level2Snapshot({\n                exchange: this.name,\n                base: market.base,\n                quote: market.quote,\n                timestampMs,\n                asks,\n                bids,\n            });\n            this.emit(\"l2snapshot\", snapshot, market);\n        } catch (ex) {\n            this.emit(\"error\", ex);\n            failed = true;\n        } finally {\n            if (failed) this._requestLevel2Snapshot(market);\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"script"}