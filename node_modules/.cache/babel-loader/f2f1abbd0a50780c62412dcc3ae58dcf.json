{"ast":null,"code":"var _jsxFileName = \"/Users/Derek/workspace/crypto-visualizer-wip/src/components/TransactionBubble/TransactionBubble.tsx\";\nimport React from 'react';\nimport './TransactionBubble.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TransactionBubble extends React.Component {\n  // startX: number = 0\n  constructor(props) {\n    super(props);\n    this.windowWidth = 0;\n    this.windowHeight = 0;\n    this.leftPercent = 0;\n    this.bubbleScale = 0;\n    this.setWindowDimensions();\n    console.log('width:', this.windowWidth, 'height:', this.windowHeight); // Calculate size of bubble\n\n    const min = 0.0001;\n    const max = 0.05; // percent = size / (A + (B - A))\n\n    this.bubbleScale = Number.parseFloat((Math.max(props.size, min) / (min + (max - min))).toFixed(1));\n    console.log('scale:', this.bubbleScale); // Calculate start X\n\n    const startX = Math.floor(Math.random() * this.windowWidth);\n    this.leftPercent = Math.floor(startX / this.windowWidth * 80);\n    console.log('left:', this.leftPercent);\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.setWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.setWindowDimensions);\n  }\n\n  setWindowDimensions() {\n    var _document$documentEle, _document$body, _document$documentEle2, _document$body2;\n\n    this.windowWidth = ((_document$documentEle = document.documentElement) === null || _document$documentEle === void 0 ? void 0 : _document$documentEle.clientWidth) || ((_document$body = document.body) === null || _document$body === void 0 ? void 0 : _document$body.clientWidth) || 0;\n    this.windowHeight = ((_document$documentEle2 = document.documentElement) === null || _document$documentEle2 === void 0 ? void 0 : _document$documentEle2.clientHeight) || ((_document$body2 = document.body) === null || _document$body2 === void 0 ? void 0 : _document$body2.clientHeight) || 0;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bubble flex flex-col place-items-center justify-center\",\n      style: {\n        left: `${this.leftPercent}%`,\n        transform: `scale(${this.bubbleScale})`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"transaction-amount mb-2 text-2xl\",\n        children: \"#.###### BTC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"transaction-price mt-2 text-xl\",\n        children: \"$#####.##\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default TransactionBubble;","map":{"version":3,"sources":["/Users/Derek/workspace/crypto-visualizer-wip/src/components/TransactionBubble/TransactionBubble.tsx"],"names":["React","TransactionBubble","Component","constructor","props","windowWidth","windowHeight","leftPercent","bubbleScale","setWindowDimensions","console","log","min","max","Number","parseFloat","Math","size","toFixed","startX","floor","random","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","document","documentElement","clientWidth","body","clientHeight","render","left","transform"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,yBAAP;;;AAMA,MAAMC,iBAAN,SAAgCD,KAAK,CAACE,SAAtC,CAAuD;AAGnD;AAKAC,EAAAA,WAAW,CAACC,KAAD,EAAa;AACpB,UAAMA,KAAN;AADoB,SAPxBC,WAOwB,GAPF,CAOE;AAAA,SANxBC,YAMwB,GAND,CAMC;AAAA,SAJxBC,WAIwB,GAJF,CAIE;AAAA,SAHxBC,WAGwB,GAHF,CAGE;AAEpB,SAAKC,mBAAL;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAKN,WAA3B,EAAwC,SAAxC,EAAmD,KAAKC,YAAxD,EAHoB,CAKpB;;AACA,UAAMM,GAAG,GAAG,MAAZ;AACA,UAAMC,GAAG,GAAG,IAAZ,CAPoB,CAQpB;;AACA,SAAKL,WAAL,GAAmBM,MAAM,CAACC,UAAP,CAAkB,CAACC,IAAI,CAACH,GAAL,CAAST,KAAK,CAACa,IAAf,EAAqBL,GAArB,KAA6BA,GAAG,IAAIC,GAAG,GAAGD,GAAV,CAAhC,CAAD,EAAkDM,OAAlD,CAA0D,CAA1D,CAAlB,CAAnB;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAKH,WAA3B,EAVoB,CAYpB;;AACA,UAAMW,MAAc,GAAGH,IAAI,CAACI,KAAL,CAAWJ,IAAI,CAACK,MAAL,KAAgB,KAAKhB,WAAhC,CAAvB;AACA,SAAKE,WAAL,GAAmBS,IAAI,CAACI,KAAL,CAAWD,MAAM,GAAG,KAAKd,WAAd,GAA4B,EAAvC,CAAnB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,KAAKJ,WAA1B;AACH;;AAEDe,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKf,mBAAvC;AACH;;AAEDgB,EAAAA,oBAAoB,GAAG;AACnBF,IAAAA,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqC,KAAKjB,mBAA1C;AACH;;AAEDA,EAAAA,mBAAmB,GAAG;AAAA;;AAClB,SAAKJ,WAAL,GAAmB,0BAAAsB,QAAQ,CAACC,eAAT,gFAA0BC,WAA1B,wBAAyCF,QAAQ,CAACG,IAAlD,mDAAyC,eAAeD,WAAxD,KAAuE,CAA1F;AACA,SAAKvB,YAAL,GAAoB,2BAAAqB,QAAQ,CAACC,eAAT,kFAA0BG,YAA1B,yBAA0CJ,QAAQ,CAACG,IAAnD,oDAA0C,gBAAeC,YAAzD,KAAyE,CAA7F;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,wDAAf;AACI,MAAA,KAAK,EAAE;AACHC,QAAAA,IAAI,EAAG,GAAE,KAAK1B,WAAY,GADvB;AAEH2B,QAAAA,SAAS,EAAG,SAAQ,KAAK1B,WAAY;AAFlC,OADX;AAAA,8BAKI;AAAM,QAAA,SAAS,EAAC,kCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAM,QAAA,SAAS,EAAC,gCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AAlDkD;;AAqDvD,eAAeP,iBAAf","sourcesContent":["import React from 'react';\nimport './TransactionBubble.css';\n\ntype Props = {\n    size: number\n}\n\nclass TransactionBubble extends React.Component<Props> {\n    windowWidth: number = 0\n    windowHeight: number = 0\n    // startX: number = 0\n    leftPercent: number = 0\n    bubbleScale: number = 0\n\n\n    constructor(props: any) {\n        super(props)\n        this.setWindowDimensions()\n        console.log('width:', this.windowWidth, 'height:', this.windowHeight)\n\n        // Calculate size of bubble\n        const min = 0.0001\n        const max = 0.05\n        // percent = size / (A + (B - A))\n        this.bubbleScale = Number.parseFloat((Math.max(props.size, min) / (min + (max - min))).toFixed(1))\n        console.log('scale:', this.bubbleScale)\n        \n        // Calculate start X\n        const startX: number = Math.floor(Math.random() * this.windowWidth)\n        this.leftPercent = Math.floor(startX / this.windowWidth * 80)\n        console.log('left:', this.leftPercent)\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setWindowDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setWindowDimensions);\n    }\n\n    setWindowDimensions() {\n        this.windowWidth = document.documentElement?.clientWidth || document.body?.clientWidth || 0\n        this.windowHeight = document.documentElement?.clientHeight || document.body?.clientHeight || 0\n    }\n\n    render() {\n        return (\n            <div className=\"bubble flex flex-col place-items-center justify-center\"\n                style={{\n                    left: `${this.leftPercent}%`,\n                    transform: `scale(${this.bubbleScale})`\n                }}>\n                <span className='transaction-amount mb-2 text-2xl'>#.###### BTC</span>\n                <span className='transaction-price mt-2 text-xl'>$#####.##</span>\n            </div>\n        );\n    }\n}\n\nexport default TransactionBubble;"]},"metadata":{},"sourceType":"module"}