{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Ticker = void 0;\n\nclass Ticker {\n  constructor(_ref) {\n    let {\n      exchange,\n      base,\n      quote,\n      timestamp,\n      sequenceId,\n      last,\n      open,\n      high,\n      low,\n      volume,\n      quoteVolume,\n      change,\n      changePercent,\n      bid,\n      bidVolume,\n      ask,\n      askVolume\n    } = _ref;\n    this.exchange = exchange;\n    this.base = base;\n    this.quote = quote;\n    this.timestamp = timestamp;\n    this.sequenceId = sequenceId;\n    this.last = last;\n    this.open = open;\n    this.high = high;\n    this.low = low;\n    this.volume = volume;\n    this.quoteVolume = quoteVolume;\n    this.change = change;\n    this.changePercent = changePercent;\n    this.bid = bid;\n    this.bidVolume = bidVolume;\n    this.ask = ask;\n    this.askVolume = askVolume;\n  }\n  /**\n   * @deprecated use Market object (second argument to each event) to determine exchange and trade pair\n   */\n\n\n  get fullId() {\n    return `${this.exchange}:${this.base}/${this.quote}`;\n  }\n\n}\n\nexports.Ticker = Ticker;","map":{"version":3,"sources":["/Users/Derek/workspace/crypto-visualizer/node_modules/ccxws/src/Ticker.ts"],"names":[],"mappings":";;;;;;;AAAA,MAAa,MAAb,CAAmB;AAmBf,EAAA,WAAA,OAkBkB;AAAA,QAlBN;AACR,MAAA,QADQ;AAER,MAAA,IAFQ;AAGR,MAAA,KAHQ;AAIR,MAAA,SAJQ;AAKR,MAAA,UALQ;AAMR,MAAA,IANQ;AAOR,MAAA,IAPQ;AAQR,MAAA,IARQ;AASR,MAAA,GATQ;AAUR,MAAA,MAVQ;AAWR,MAAA,WAXQ;AAYR,MAAA,MAZQ;AAaR,MAAA,aAbQ;AAcR,MAAA,GAdQ;AAeR,MAAA,SAfQ;AAgBR,MAAA,GAhBQ;AAiBR,MAAA;AAjBQ,KAkBM;AACd,SAAK,QAAL,GAAgB,QAAhB;AACA,SAAK,IAAL,GAAY,IAAZ;AACA,SAAK,KAAL,GAAa,KAAb;AACA,SAAK,SAAL,GAAiB,SAAjB;AACA,SAAK,UAAL,GAAkB,UAAlB;AACA,SAAK,IAAL,GAAY,IAAZ;AACA,SAAK,IAAL,GAAY,IAAZ;AACA,SAAK,IAAL,GAAY,IAAZ;AACA,SAAK,GAAL,GAAW,GAAX;AACA,SAAK,MAAL,GAAc,MAAd;AACA,SAAK,WAAL,GAAmB,WAAnB;AACA,SAAK,MAAL,GAAc,MAAd;AACA,SAAK,aAAL,GAAqB,aAArB;AACA,SAAK,GAAL,GAAW,GAAX;AACA,SAAK,SAAL,GAAiB,SAAjB;AACA,SAAK,GAAL,GAAW,GAAX;AACA,SAAK,SAAL,GAAiB,SAAjB;AACH;AAED;;AAEG;;;AACc,MAAN,MAAM,GAAA;AACb,WAAO,GAAG,KAAK,QAAQ,IAAI,KAAK,IAAI,IAAI,KAAK,KAAK,EAAlD;AACH;;AA9Dc;;AAAnB,OAAA,CAAA,MAAA,GAAA,MAAA","sourcesContent":["export class Ticker {\n    public exchange: string;\n    public base: string;\n    public quote: string;\n    public timestamp: number;\n    public sequenceId: number;\n    public last: string;\n    public open: string;\n    public high: string;\n    public low: string;\n    public volume: string;\n    public quoteVolume: string;\n    public change: string;\n    public changePercent: string;\n    public bid: string;\n    public bidVolume: string;\n    public ask: string;\n    public askVolume: string;\n\n    constructor({\n        exchange,\n        base,\n        quote,\n        timestamp,\n        sequenceId,\n        last,\n        open,\n        high,\n        low,\n        volume,\n        quoteVolume,\n        change,\n        changePercent,\n        bid,\n        bidVolume,\n        ask,\n        askVolume,\n    }: Partial<Ticker>) {\n        this.exchange = exchange;\n        this.base = base;\n        this.quote = quote;\n        this.timestamp = timestamp;\n        this.sequenceId = sequenceId;\n        this.last = last;\n        this.open = open;\n        this.high = high;\n        this.low = low;\n        this.volume = volume;\n        this.quoteVolume = quoteVolume;\n        this.change = change;\n        this.changePercent = changePercent;\n        this.bid = bid;\n        this.bidVolume = bidVolume;\n        this.ask = ask;\n        this.askVolume = askVolume;\n    }\n\n    /**\n     * @deprecated use Market object (second argument to each event) to determine exchange and trade pair\n     */\n    public get fullId() {\n        return `${this.exchange}:${this.base}/${this.quote}`;\n    }\n}\n"]},"metadata":{},"sourceType":"script"}