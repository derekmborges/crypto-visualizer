{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useSocketIO = void 0;\n\nvar react_1 = require(\"react\");\n\nvar use_websocket_1 = require(\"./use-websocket\");\n\nvar constants_1 = require(\"./constants\");\n\nvar emptyEvent = {\n  type: 'empty',\n  payload: null\n};\n\nvar getSocketData = function (event) {\n  if (!event || !event.data) {\n    return emptyEvent;\n  }\n\n  var match = event.data.match(/\\[.*]/);\n\n  if (!match) {\n    return emptyEvent;\n  }\n\n  var data = JSON.parse(match);\n\n  if (!Array.isArray(data) || !data[1]) {\n    return emptyEvent;\n  }\n\n  return {\n    type: data[0],\n    payload: data[1]\n  };\n};\n\nexports.useSocketIO = function (url, options, connect) {\n  if (options === void 0) {\n    options = constants_1.DEFAULT_OPTIONS;\n  }\n\n  if (connect === void 0) {\n    connect = true;\n  }\n\n  var optionsWithSocketIO = react_1.useMemo(function () {\n    return __assign(__assign({}, options), {\n      fromSocketIO: true\n    });\n  }, []);\n\n  var _a = use_websocket_1.useWebSocket(url, optionsWithSocketIO, connect),\n      sendMessage = _a.sendMessage,\n      sendJsonMessage = _a.sendJsonMessage,\n      lastMessage = _a.lastMessage,\n      readyState = _a.readyState,\n      getWebSocket = _a.getWebSocket;\n\n  var socketIOLastMessage = react_1.useMemo(function () {\n    return getSocketData(lastMessage);\n  }, [lastMessage]);\n  return {\n    sendMessage: sendMessage,\n    sendJsonMessage: sendJsonMessage,\n    lastMessage: socketIOLastMessage,\n    lastJsonMessage: socketIOLastMessage,\n    readyState: readyState,\n    getWebSocket: getWebSocket\n  };\n};","map":{"version":3,"sources":["/Users/Derek/workspace/crypto-visualizer-wip/node_modules/react-use-websocket/src/lib/use-socket-io.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AACA,IAAA,eAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;AAQA,IAAM,UAAU,GAAwB;AACtC,EAAA,IAAI,EAAE,OADgC;AAEtC,EAAA,OAAO,EAAE;AAF6B,CAAxC;;AAKA,IAAM,aAAa,GAAG,UAAC,KAAD,EAA2C;AAC/D,MAAI,CAAC,KAAD,IAAU,CAAC,KAAK,CAAC,IAArB,EAA2B;AACzB,WAAO,UAAP;AACD;;AAED,MAAM,KAAK,GAAG,KAAK,CAAC,IAAN,CAAW,KAAX,CAAiB,OAAjB,CAAd;;AAEA,MAAI,CAAC,KAAL,EAAY;AACV,WAAO,UAAP;AACD;;AAED,MAAM,IAAI,GAAG,IAAI,CAAC,KAAL,CAAW,KAAX,CAAb;;AAEA,MAAI,CAAC,KAAK,CAAC,OAAN,CAAc,IAAd,CAAD,IAAwB,CAAC,IAAI,CAAC,CAAD,CAAjC,EAAsC;AACpC,WAAO,UAAP;AACD;;AAED,SAAO;AACL,IAAA,IAAI,EAAE,IAAI,CAAC,CAAD,CADL;AAEL,IAAA,OAAO,EAAE,IAAI,CAAC,CAAD;AAFR,GAAP;AAID,CArBD;;AAuBa,OAAA,CAAA,WAAA,GAAc,UACzB,GADyB,EAEzB,OAFyB,EAGzB,OAHyB,EAGF;AADvB,MAAA,OAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAmB,WAAA,CAAA,eAAnB;AAAkC;;AAClC,MAAA,OAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,IAAA;AAAuB;;AAEvB,MAAM,mBAAmB,GAAG,OAAA,CAAA,OAAA,CAAQ,YAAA;AAAM,WAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACrC,OADqC,CAAA,EAC9B;AACV,MAAA,YAAY,EAF4B;AAC9B,KAD8B,CAAA;AAGxC,GAH0B,EAGxB,EAHwB,CAA5B;;AAKM,MAAA,EAAA,GAMF,eAAA,CAAA,YAAA,CAEF,GAFE,EAGF,mBAHE,EAIF,OAJE,CANE;AAAA,MACJ,WAAW,GAAA,EAAA,CAAA,WADP;AAAA,MAEJ,eAAe,GAAA,EAAA,CAAA,eAFX;AAAA,MAGJ,WAAW,GAAA,EAAA,CAAA,WAHP;AAAA,MAIJ,UAAU,GAAA,EAAA,CAAA,UAJN;AAAA,MAKJ,YAAY,GAAA,EAAA,CAAA,YALR;;AAaN,MAAM,mBAAmB,GAAG,OAAA,CAAA,OAAA,CAAQ,YAAA;AAClC,WAAA,aAAa,CAAC,WAAD,CAAb;AAA0B,GADA,EACE,CAAC,WAAD,CADF,CAA5B;AAGA,SAAO;AACL,IAAA,WAAW,EAAA,WADN;AAEL,IAAA,eAAe,EAAA,eAFV;AAGL,IAAA,WAAW,EAAE,mBAHR;AAIL,IAAA,eAAe,EAAE,mBAJZ;AAKL,IAAA,UAAU,EAAA,UALL;AAML,IAAA,YAAY,EAAA;AANP,GAAP;AAQD,CAlCY","sourcesContent":["import { useMemo } from 'react'\nimport { useWebSocket } from './use-websocket'\nimport { DEFAULT_OPTIONS } from './constants'\nimport { Options, WebSocketHook } from './types';\n\nexport interface SocketIOMessageData {\n  type: string,\n  payload: any,\n}\n\nconst emptyEvent: SocketIOMessageData = {\n  type: 'empty',\n  payload: null,\n}\n\nconst getSocketData = (event: WebSocketEventMap['message'] | null): SocketIOMessageData => {\n  if (!event || !event.data) {\n    return emptyEvent\n  }\n\n  const match = event.data.match(/\\[.*]/)\n\n  if (!match) {\n    return emptyEvent\n  }\n\n  const data = JSON.parse(match)\n\n  if (!Array.isArray(data) || !data[1]) {\n    return emptyEvent\n  }\n\n  return {\n    type: data[0],\n    payload: data[1],\n  }\n}\n\nexport const useSocketIO = (\n  url: string | (() => string | Promise<string>) | null,\n  options: Options = DEFAULT_OPTIONS,\n  connect: boolean = true,\n): WebSocketHook<SocketIOMessageData> => {\n  const optionsWithSocketIO = useMemo(() => ({\n    ...options,\n    fromSocketIO: true,\n  }), [])\n\n  const {\n    sendMessage,\n    sendJsonMessage,\n    lastMessage,\n    readyState,\n    getWebSocket,\n  } = useWebSocket(\n\n    url,\n    optionsWithSocketIO,\n    connect,\n  );\n\n  const socketIOLastMessage = useMemo(() =>\n    getSocketData(lastMessage), [lastMessage]);\n\n  return {\n    sendMessage,\n    sendJsonMessage,\n    lastMessage: socketIOLastMessage,\n    lastJsonMessage: socketIOLastMessage,\n    readyState,\n    getWebSocket,\n  };\n}\n"]},"metadata":{},"sourceType":"script"}