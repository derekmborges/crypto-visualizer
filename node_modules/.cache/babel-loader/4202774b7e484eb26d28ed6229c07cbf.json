{"ast":null,"code":"var _jsxFileName = \"/Users/Derek/workspace/crypto-visualizer-wip/src/components/Canvas/Canvas.tsx\",\n    _s = $RefreshSig$();\n\nimport './Canvas.css';\nimport TransactionBubble from '../TransactionBubble/TransactionBubble';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Canvas() {\n  _s();\n\n  const [nextKey, setNextKey] = useState(0);\n  const [transactionsMap] = useState(new Map());\n  const [timers, setTimers] = useState([]);\n  const [transactions, setTransactions] = useState([]); //     {\n  //         amount: 0.00765,\n  //         coin: 'BTC',\n  //         exchange: 'Coinbase',\n  //         price: 0,\n  //     } as Transaction,\n  //     {\n  //         amount: 0.01234,\n  //         coin: 'BTC',\n  //         exchange: 'Coinbase',\n  //         price: 0,\n  //     } as Transaction,\n  // ])\n\n  useEffect(() => {\n    transactionsMap.set(nextKey, {\n      amount: 0.00765,\n      coin: 'BTC',\n      exchange: 'Coinbase',\n      price: 0\n    });\n    let currentTimers = [...timers];\n    currentTimers.push(setTimeout(() => transactionsMap.delete(nextKey), 5000));\n    setTimers(currentTimers);\n    setNextKey(nextKey + 1);\n    transactionsMap.set(nextKey, {\n      amount: 0.01234,\n      coin: 'BTC',\n      exchange: 'Coinbase',\n      price: 0\n    });\n    currentTimers = [...timers];\n    currentTimers.push(setTimeout(() => transactionsMap.delete(nextKey), 5000));\n    setTimers(currentTimers);\n    setNextKey(nextKey + 1);\n    console.log(transactionsMap);\n    console.log(timers); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-screen h-screen bg-coolgray400\",\n    children: Array.from(transactionsMap.values()).map(transaction => /*#__PURE__*/_jsxDEV(TransactionBubble, {\n      transaction: transaction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Canvas, \"dXIinCA2DY315SdydSTHJZUaq+Q=\");\n\n_c = Canvas;\nexport default Canvas;\n\nvar _c;\n\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"sources":["/Users/Derek/workspace/crypto-visualizer-wip/src/components/Canvas/Canvas.tsx"],"names":["TransactionBubble","useEffect","useState","Canvas","nextKey","setNextKey","transactionsMap","Map","timers","setTimers","transactions","setTransactions","set","amount","coin","exchange","price","currentTimers","push","setTimeout","delete","console","log","Array","from","values","map","transaction"],"mappings":";;;AAAA,OAAO,cAAP;AACA,OAAOA,iBAAP,MAA8B,wCAA9B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAGA,SAASC,MAAT,GAAkB;AAAA;;AACd,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACI,eAAD,IAAoBJ,QAAQ,CAAC,IAAIK,GAAJ,EAAD,CAAlC;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,EAAD,CAAhD,CAJc,CAKd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,eAAe,CAACM,GAAhB,CAAoBR,OAApB,EAA6B;AACzBS,MAAAA,MAAM,EAAE,OADiB;AAEzBC,MAAAA,IAAI,EAAE,KAFmB;AAGzBC,MAAAA,QAAQ,EAAE,UAHe;AAIzBC,MAAAA,KAAK,EAAE;AAJkB,KAA7B;AAMA,QAAIC,aAAa,GAAG,CAAC,GAAGT,MAAJ,CAApB;AACAS,IAAAA,aAAa,CAACC,IAAd,CAAmBC,UAAU,CAAC,MAAMb,eAAe,CAACc,MAAhB,CAAuBhB,OAAvB,CAAP,EAAwC,IAAxC,CAA7B;AACAK,IAAAA,SAAS,CAACQ,aAAD,CAAT;AACAZ,IAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AAEAE,IAAAA,eAAe,CAACM,GAAhB,CAAoBR,OAApB,EAA6B;AACzBS,MAAAA,MAAM,EAAE,OADiB;AAEzBC,MAAAA,IAAI,EAAE,KAFmB;AAGzBC,MAAAA,QAAQ,EAAE,UAHe;AAIzBC,MAAAA,KAAK,EAAE;AAJkB,KAA7B;AAMAC,IAAAA,aAAa,GAAG,CAAC,GAAGT,MAAJ,CAAhB;AACAS,IAAAA,aAAa,CAACC,IAAd,CAAmBC,UAAU,CAAC,MAAMb,eAAe,CAACc,MAAhB,CAAuBhB,OAAvB,CAAP,EAAwC,IAAxC,CAA7B;AACAK,IAAAA,SAAS,CAACQ,aAAD,CAAT;AACAZ,IAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACAiB,IAAAA,OAAO,CAACC,GAAR,CAAYhB,eAAZ;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAYd,MAAZ,EAvBY,CAwBhB;AACC,GAzBQ,EAyBN,EAzBM,CAAT;AA2BA,sBACI;AAAK,IAAA,SAAS,EAAC,kCAAf;AAAA,cACKe,KAAK,CAACC,IAAN,CAAWlB,eAAe,CAACmB,MAAhB,EAAX,EAAqCC,GAArC,CAA0CC,WAAD,iBACtC,QAAC,iBAAD;AAAmB,MAAA,WAAW,EAAEA;AAAhC;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GArDQxB,M;;KAAAA,M;AAuDT,eAAeA,MAAf","sourcesContent":["import './Canvas.css';\nimport TransactionBubble from '../TransactionBubble/TransactionBubble';\nimport { useEffect, useState } from 'react';\nimport { Transaction } from '../../models/transaction';\n\nfunction Canvas() {\n    const [nextKey, setNextKey] = useState(0)\n    const [transactionsMap] = useState(new Map<number, Transaction>())\n    const [timers, setTimers] = useState([] as NodeJS.Timeout[])\n    const [transactions, setTransactions] = useState([])\n    //     {\n    //         amount: 0.00765,\n    //         coin: 'BTC',\n    //         exchange: 'Coinbase',\n    //         price: 0,\n    //     } as Transaction,\n    //     {\n    //         amount: 0.01234,\n    //         coin: 'BTC',\n    //         exchange: 'Coinbase',\n    //         price: 0,\n    //     } as Transaction,\n    // ])\n\n    useEffect(() => {\n        transactionsMap.set(nextKey, {\n            amount: 0.00765,\n            coin: 'BTC',\n            exchange: 'Coinbase',\n            price: 0,\n        })\n        let currentTimers = [...timers]\n        currentTimers.push(setTimeout(() => transactionsMap.delete(nextKey), 5000))\n        setTimers(currentTimers)\n        setNextKey(nextKey + 1)\n\n        transactionsMap.set(nextKey, {\n            amount: 0.01234,\n            coin: 'BTC',\n            exchange: 'Coinbase',\n            price: 0,\n        })\n        currentTimers = [...timers]\n        currentTimers.push(setTimeout(() => transactionsMap.delete(nextKey), 5000))\n        setTimers(currentTimers)\n        setNextKey(nextKey + 1)\n        console.log(transactionsMap)\n        console.log(timers)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    return (\n        <div className='w-screen h-screen bg-coolgray400'>\n            {Array.from(transactionsMap.values()).map((transaction) => (\n                <TransactionBubble transaction={transaction} />\n            ))}\n        </div>\n    );\n}\n\nexport default Canvas;"]},"metadata":{},"sourceType":"module"}