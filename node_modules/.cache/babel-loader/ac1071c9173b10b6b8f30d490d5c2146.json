{"ast":null,"code":"var _jsxFileName = \"/Users/Derek/workspace/crypto-visualizer-wip/src/components/TransactionBubble/TransactionBubble.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport './TransactionBubble.css'; // class TransactionBubble extends React.Component<Props> {\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TransactionBubble(_ref) {\n  _s();\n\n  let {\n    size = 0\n  } = _ref;\n  const bubbleRef = useRef();\n  const [canvasWidth, setCanvasWidth] = useState(0);\n  const [canvasHeight, setCanvasHeight] = useState(0);\n  const [bubbleSize, setBubbleSize] = useState(0);\n  const [position, setPosition] = useState(0);\n  const random = Math.random(); // Calculate size of bubble\n\n  const min = 0.0001;\n  const max = 0.05;\n  const maxPixels = 1000;\n  const ratio = Number.parseFloat((Math.max(size, min) / (min + (max - min))).toFixed(1));\n  setBubbleSize(100 + ratio * maxPixels);\n\n  const getWindowSize = () => {\n    var _document$documentEle, _document$body, _document$documentEle2, _document$body2;\n\n    setCanvasWidth(((_document$documentEle = document.documentElement) === null || _document$documentEle === void 0 ? void 0 : _document$documentEle.clientWidth) || ((_document$body = document.body) === null || _document$body === void 0 ? void 0 : _document$body.clientWidth) || 0);\n    setCanvasHeight(((_document$documentEle2 = document.documentElement) === null || _document$documentEle2 === void 0 ? void 0 : _document$documentEle2.clientHeight) || ((_document$body2 = document.body) === null || _document$body2 === void 0 ? void 0 : _document$body2.clientHeight) || 0);\n  };\n\n  useEffect(() => {\n    window.addEventListener('resize', getWindowSize);\n    return () => window.removeEventListener('resize', getWindowSize);\n  }, []); // Position bubble within canvas\n\n  useEffect(() => {\n    console.log('canvas:', canvasWidth, 'x', canvasHeight);\n    const availablePixels = canvasWidth - bubbleSize;\n    console.log('Position:', random * availablePixels);\n    setPosition(random * availablePixels);\n  }, [canvasWidth, canvasHeight, bubbleSize, random]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bubble flex flex-col place-items-center justify-center\",\n    style: {\n      left: `${position}px`,\n      width: `${bubbleSize}px`,\n      height: `${bubbleSize}px` // transform: `scale(${this.bubbleScale})`\n\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"transaction-amount mb-2 text-2xl\",\n      children: \"#.###### BTC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"transaction-price mt-2 text-xl\",\n      children: \"$#####.##\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TransactionBubble, \"0kR5sDhji9+h9XxGKNSZAAoKvGA=\");\n\n_c = TransactionBubble;\nexport default TransactionBubble;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionBubble\");","map":{"version":3,"sources":["/Users/Derek/workspace/crypto-visualizer-wip/src/components/TransactionBubble/TransactionBubble.tsx"],"names":["React","useEffect","useRef","useState","TransactionBubble","size","bubbleRef","canvasWidth","setCanvasWidth","canvasHeight","setCanvasHeight","bubbleSize","setBubbleSize","position","setPosition","random","Math","min","max","maxPixels","ratio","Number","parseFloat","toFixed","getWindowSize","document","documentElement","clientWidth","body","clientHeight","window","addEventListener","removeEventListener","console","log","availablePixels","left","width","height"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport './TransactionBubble.css';\n\n// class TransactionBubble extends React.Component<Props> {\nfunction TransactionBubble({ size = 0 }) {\n    const bubbleRef = useRef()\n    const [canvasWidth, setCanvasWidth] = useState(0)\n    const [canvasHeight, setCanvasHeight] = useState(0)\n    const [bubbleSize, setBubbleSize] = useState(0)\n    const [position, setPosition] = useState(0)\n    const random = Math.random()\n\n    // Calculate size of bubble\n    const min = 0.0001\n    const max = 0.05\n    const maxPixels = 1000\n    const ratio = Number.parseFloat((Math.max(size, min) / (min + (max - min))).toFixed(1))\n    setBubbleSize(100 + ratio * maxPixels)\n\n    const getWindowSize = () => {\n        setCanvasWidth(document.documentElement?.clientWidth || document.body?.clientWidth || 0)\n        setCanvasHeight(document.documentElement?.clientHeight || document.body?.clientHeight || 0)\n    }\n\n    useEffect(() => {\n        window.addEventListener('resize', getWindowSize)\n        return () => window.removeEventListener('resize', getWindowSize)\n    }, [])\n\n    // Position bubble within canvas\n    useEffect(() => {\n        console.log('canvas:', canvasWidth, 'x', canvasHeight)\n\n        const availablePixels = canvasWidth - bubbleSize\n        console.log('Position:', random * availablePixels)\n        setPosition(random * availablePixels)\n    }, [canvasWidth, canvasHeight, bubbleSize, random])\n\n    return (\n        <div className=\"bubble flex flex-col place-items-center justify-center\"\n            style={{\n                left: `${position}px`,\n                width: `${bubbleSize}px`,\n                height: `${bubbleSize}px`,\n                // transform: `scale(${this.bubbleScale})`\n            }}>\n            <span className='transaction-amount mb-2 text-2xl'>#.###### BTC</span>\n            <span className='transaction-price mt-2 text-xl'>$#####.##</span>\n        </div>\n    );\n}\n\nexport default TransactionBubble;"]},"metadata":{},"sourceType":"module"}