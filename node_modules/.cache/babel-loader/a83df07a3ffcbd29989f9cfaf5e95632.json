{"ast":null,"code":"\"use strict\";\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Trade = void 0;\n\nclass Trade {\n  constructor(props) {\n    this.exchange = props.exchange;\n    this.quote = props.quote;\n    this.base = props.base;\n    this.tradeId = props.tradeId;\n    this.sequenceId = props.sequenceId;\n    this.unix = props.unix;\n    this.side = props.side;\n    this.price = props.price;\n    this.amount = props.amount;\n    this.buyOrderId = props.buyOrderId;\n    this.sellOrderId = props.sellOrderId; // attach any extra props\n\n    for (const key in props) {\n      if (!this[key]) this[key] = props[key];\n    }\n  }\n\n  get marketId() {\n    return `${this.base}/${this.quote}`;\n  }\n  /**\n   * @deprecated use Market object (second argument to each event) to determine exchange and trade pair\n   */\n\n\n  get fullId() {\n    return `${this.exchange}:${this.base}/${this.quote}`;\n  }\n\n}\n\nexports.Trade = Trade;","map":{"version":3,"sources":["/Users/Derek/workspace/crypto-visualizer/node_modules/ccxws/src/Trade.ts"],"names":[],"mappings":";AAAA;;AACA;;;;;;;AAEA,MAAa,KAAb,CAAkB;AAad,EAAA,WAAA,CAAY,KAAZ,EAAuC;AACnC,SAAK,QAAL,GAAgB,KAAK,CAAC,QAAtB;AACA,SAAK,KAAL,GAAa,KAAK,CAAC,KAAnB;AACA,SAAK,IAAL,GAAY,KAAK,CAAC,IAAlB;AACA,SAAK,OAAL,GAAe,KAAK,CAAC,OAArB;AACA,SAAK,UAAL,GAAkB,KAAK,CAAC,UAAxB;AACA,SAAK,IAAL,GAAY,KAAK,CAAC,IAAlB;AACA,SAAK,IAAL,GAAY,KAAK,CAAC,IAAlB;AACA,SAAK,KAAL,GAAa,KAAK,CAAC,KAAnB;AACA,SAAK,MAAL,GAAc,KAAK,CAAC,MAApB;AACA,SAAK,UAAL,GAAkB,KAAK,CAAC,UAAxB;AACA,SAAK,WAAL,GAAmB,KAAK,CAAC,WAAzB,CAXmC,CAanC;;AACA,SAAK,MAAM,GAAX,IAAkB,KAAlB,EAAyB;AACrB,UAAI,CAAC,KAAK,GAAL,CAAL,EAAgB,KAAK,GAAL,IAAY,KAAK,CAAC,GAAD,CAAjB;AACnB;AACJ;;AAEkB,MAAR,QAAQ,GAAA;AACf,WAAO,GAAG,KAAK,IAAI,IAAI,KAAK,KAAK,EAAjC;AACH;AAED;;AAEG;;;AACc,MAAN,MAAM,GAAA;AACb,WAAO,GAAG,KAAK,QAAQ,IAAI,KAAK,IAAI,IAAI,KAAK,KAAK,EAAlD;AACH;;AAzCa;;AAAlB,OAAA,CAAA,KAAA,GAAA,KAAA","sourcesContent":["/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n\nexport class Trade {\n    public exchange: string;\n    public quote: string;\n    public base: string;\n    public tradeId: string;\n    public sequenceId: number;\n    public unix: number;\n    public side: string;\n    public price: string;\n    public amount: string;\n    public buyOrderId: string;\n    public sellOrderId: string;\n\n    constructor(props: Partial<Trade> | any) {\n        this.exchange = props.exchange;\n        this.quote = props.quote;\n        this.base = props.base;\n        this.tradeId = props.tradeId;\n        this.sequenceId = props.sequenceId;\n        this.unix = props.unix;\n        this.side = props.side;\n        this.price = props.price;\n        this.amount = props.amount;\n        this.buyOrderId = props.buyOrderId;\n        this.sellOrderId = props.sellOrderId;\n\n        // attach any extra props\n        for (const key in props) {\n            if (!this[key]) this[key] = props[key];\n        }\n    }\n\n    public get marketId() {\n        return `${this.base}/${this.quote}`;\n    }\n\n    /**\n     * @deprecated use Market object (second argument to each event) to determine exchange and trade pair\n     */\n    public get fullId() {\n        return `${this.exchange}:${this.base}/${this.quote}`;\n    }\n}\n"]},"metadata":{},"sourceType":"script"}