{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DeribitClient = void 0;\n/* eslint-disable @typescript-eslint/member-ordering */\n\n/* eslint-disable @typescript-eslint/no-unsafe-call */\n\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n\nconst BasicClient_1 = require(\"../BasicClient\");\n\nconst Candle_1 = require(\"../Candle\");\n\nconst CandlePeriod_1 = require(\"../CandlePeriod\");\n\nconst Throttle_1 = require(\"../flowcontrol/Throttle\");\n\nconst Level2Point_1 = require(\"../Level2Point\");\n\nconst Level2Snapshots_1 = require(\"../Level2Snapshots\");\n\nconst NotImplementedFn_1 = require(\"../NotImplementedFn\");\n\nconst Ticker_1 = require(\"../Ticker\");\n\nconst Trade_1 = require(\"../Trade\");\n\nclass DeribitClient extends BasicClient_1.BasicClient {\n  constructor() {\n    let {\n      wssPath = \"wss://www.deribit.com/ws/api/v2\",\n      watcherMs\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super(wssPath, \"Deribit\", undefined, watcherMs);\n    this._sendSubLevel2Snapshots = NotImplementedFn_1.NotImplementedFn;\n    this._sendUnsubLevel2Snapshots = NotImplementedFn_1.NotImplementedFn;\n    this._sendSubLevel3Snapshots = NotImplementedFn_1.NotImplementedFn;\n    this._sendUnsubLevel3Snapshots = NotImplementedFn_1.NotImplementedFn;\n    this._sendSubLevel3Updates = NotImplementedFn_1.NotImplementedFn;\n    this._sendUnsubLevel3Updates = NotImplementedFn_1.NotImplementedFn;\n    this.hasTickers = true;\n    this.hasTrades = true;\n    this.hasCandles = true;\n    this.hasLevel2Updates = true;\n    this.id = 0;\n    this.candlePeriod = CandlePeriod_1.CandlePeriod._1m;\n    this._send = (0, Throttle_1.throttle)(this.__send.bind(this), 50);\n  }\n\n  _beforeClose() {\n    this._send.cancel();\n  }\n\n  __send(message) {\n    this._wss.send(message);\n  }\n\n  _sendSubTicker(remote_id) {\n    this._send(JSON.stringify({\n      jsonrpc: \"2.0\",\n      method: \"public/subscribe\",\n      params: {\n        channels: [`ticker.${remote_id}.raw`]\n      },\n      id: ++this.id\n    }));\n  }\n\n  _sendUnsubTicker(remote_id) {\n    this._send(JSON.stringify({\n      jsonrpc: \"2.0\",\n      method: \"public/unsubscribe\",\n      params: {\n        channels: [`ticker.${remote_id}.raw`]\n      },\n      id: ++this.id\n    }));\n  }\n\n  _sendSubTrades(remote_id) {\n    this._send(JSON.stringify({\n      jsonrpc: \"2.0\",\n      method: \"public/subscribe\",\n      params: {\n        channels: [`trades.${remote_id}.raw`]\n      },\n      id: ++this.id\n    }));\n  }\n\n  _sendUnsubTrades(remote_id) {\n    this._send(JSON.stringify({\n      jsonrpc: \"2.0\",\n      method: \"public/unsubscribe\",\n      params: {\n        channels: [`trades.${remote_id}.raw`]\n      },\n      id: ++this.id\n    }));\n  }\n\n  _sendSubCandles(remote_id) {\n    this._send(JSON.stringify({\n      jsonrpc: \"2.0\",\n      method: \"public/subscribe\",\n      params: {\n        channels: [`chart.trades.${remote_id}.${candlePeriod(this.candlePeriod)}`]\n      },\n      id: ++this.id\n    }));\n  }\n\n  _sendUnsubCandles(remote_id) {\n    this._send(JSON.stringify({\n      jsonrpc: \"2.0\",\n      method: \"public/unsubscribe\",\n      params: {\n        channels: [`chart.trades.${remote_id}.${candlePeriod(this.candlePeriod)}`]\n      },\n      id: ++this.id\n    }));\n  }\n\n  _sendSubLevel2Updates(remote_id) {\n    this._send(JSON.stringify({\n      jsonrpc: \"2.0\",\n      method: \"public/subscribe\",\n      params: {\n        channels: [`book.${remote_id}.raw`]\n      },\n      id: ++this.id\n    }));\n  }\n\n  _sendUnsubLevel2Updates(remote_id) {\n    this._wss.send(JSON.stringify({\n      jsonrpc: \"2.0\",\n      method: \"public/unsubscribe\",\n      params: {\n        channels: [`book.${remote_id}.raw`]\n      },\n      id: ++this.id\n    }));\n  }\n\n  _onMessage(raw) {\n    const msg = JSON.parse(raw); // console.log(msg);\n    // Error?\n\n    if (!msg.params) {\n      return;\n    } // Everything past here should be a channel message\n\n\n    const channel = msg.params.channel;\n\n    if (!channel) {\n      return;\n    } // tickers - ticker.{instrument_name}.{interval}\n\n\n    if (channel.startsWith(\"ticker\")) {\n      const parts = channel.split(\".\");\n\n      const market = this._tickerSubs.get(parts[1]);\n\n      if (!market) return;\n\n      const ticker = this._constructTicker(msg, market);\n\n      this.emit(\"ticker\", ticker, market);\n      return;\n    } // trades - trades.{instrument_name}.{interval}\n\n\n    if (channel.startsWith(\"trades\")) {\n      const parts = channel.split(\".\");\n\n      const market = this._tradeSubs.get(parts[1]);\n\n      if (!market) return; // eslint-disable-next-line prefer-const\n\n      for (let datum of msg.params.data) {\n        const trade = this._constructTrade(datum, market);\n\n        this.emit(\"trade\", trade, market);\n      }\n\n      return;\n    } // candle - chart.trades.{instrument_name}.{resolution}\n\n\n    if (channel.startsWith(\"chart\")) {\n      const parts = channel.split(\".\");\n\n      const market = this._candleSubs.get(parts[2]);\n\n      if (!market) return;\n\n      const candle = this._constructCandle(msg.params.data);\n\n      this.emit(\"candle\", candle, market);\n      return;\n    } // book - book.{instrument_name}.{interval}\n\n\n    if (channel.startsWith(\"book\")) {\n      const parts = channel.split(\".\");\n\n      const market = this._level2UpdateSubs.get(parts[1]);\n\n      if (!market) return; // capture snapshot\n\n      if (!msg.params.data.prev_change_id) {\n        const snapshot = this._constructLevel2Snapshot(msg.params.data, market);\n\n        this.emit(\"l2snapshot\", snapshot, market);\n      } // capture update\n      else {\n        const update = this._constructLevel2Update(msg.params.data, market);\n\n        this.emit(\"l2update\", update, market);\n      }\n\n      return;\n    }\n  }\n  /**\n  {\n    \"jsonrpc\": \"2.0\",\n    \"method\": \"subscription\",\n    \"params\": {\n      \"channel\": \"ticker.BTC-PERPETUAL.raw\",\n      \"data\": {\n        \"timestamp\": 1597244851057,\n        \"stats\": {\n          \"volume_usd\": 404775400.0,\n          \"volume\": 35574.05167122,\n          \"price_change\": 0.493,\n          \"low\": 11131.5,\n          \"high\": 11632.5\n        },\n        \"state\": \"open\",\n        \"settlement_price\": 11452.62,\n        \"open_interest\": 117979530,\n        \"min_price\": 11443.06,\n        \"max_price\": 11791.58,\n        \"mark_price\": 11617.8,\n        \"last_price\": 11618.0,\n        \"instrument_name\": \"BTC-PERPETUAL\",\n        \"index_price\": 11609.61,\n        \"funding_8h\": 0.00001212,\n        \"estimated_delivery_price\": 11609.61,\n        \"current_funding\": 0.00020545,\n        \"best_bid_price\": 11618.0,\n        \"best_bid_amount\": 7460.0,\n        \"best_ask_price\": 11618.5,\n        \"best_ask_amount\": 497870.0\n      }\n    }\n  }\n  */\n\n\n  _constructTicker(msg, market) {\n    const data = msg.params.data;\n    return new Ticker_1.Ticker({\n      exchange: this.name,\n      base: market.base,\n      quote: market.quote,\n      timestamp: data.timestamp,\n      last: (data.last_price ? data.last_price : 0).toFixed(8),\n      open: undefined,\n      high: (data.stats.high ? data.stats.high : 0).toFixed(8),\n      low: (data.stats.low ? data.stats.low : 0).toFixed(8),\n      volume: (data.stats.volume ? data.stats.volume : 0).toFixed(8),\n      quoteVolume: undefined,\n      change: undefined,\n      changePercent: (data.stats.price_change ? data.stats.price_change : 0).toFixed(2),\n      ask: (data.best_ask_price ? data.best_ask_price : 0).toFixed(8),\n      askVolume: (data.best_ask_amount ? data.best_ask_amount : 0).toFixed(8),\n      bid: (data.best_bid_price ? data.best_bid_price : 0).toFixed(8),\n      bidVolume: (data.best_bid_amount ? data.best_bid_amount : 0).toFixed(8)\n    });\n  }\n  /**\n  * PERPETUAL\n  {\n    \"trade_seq\": 56761222,\n    \"trade_id\": \"88095252\",\n    \"timestamp\": 1597246721811,\n    \"tick_direction\": 3,\n    \"price\": 11576.0,\n    \"mark_price\": 11574.5,\n    \"instrument_name\": \"BTC-PERPETUAL\",\n    \"index_price\": 11567.32,\n    \"direction\": \"buy\",\n    \"amount\": 4310.0\n  }\n  */\n\n\n  _constructTrade(datum, market) {\n    return new Trade_1.Trade({\n      exchange: this.name,\n      base: market.base,\n      quote: market.quote,\n      tradeId: datum.trade_id,\n      side: datum.direction,\n      unix: datum.timestamp,\n      price: datum.price.toFixed(8),\n      amount: datum.amount.toFixed(8),\n      tradeSeq: datum.trade_seq,\n      blockTradeId: datum.block_trade_id,\n      markPrice: datum.mark_price.toFixed(8),\n      indexPrice: datum.index_price.toFixed(8),\n      liquidation: datum.liquidation,\n      iv: datum.iv,\n      tickDirection: datum.tick_direction\n    });\n  }\n  /**\n  {\n    \"volume\" : 0.05219351,\n    \"tick\" : 1573645080000,\n    \"open\" : 8869.79,\n    \"low\" : 8788.25,\n    \"high\" : 8870.31,\n    \"cost\" : 460,\n    \"close\" : 8791.25\n  },\n  */\n\n\n  _constructCandle(data) {\n    return new Candle_1.Candle(data.tick, data.open.toFixed(8), data.high.toFixed(8), data.low.toFixed(8), data.close.toFixed(8), data.volume.toFixed(8));\n  }\n  /**\n  {\n    \"type\" : \"snapshot\",\n    \"timestamp\" : 1554373962454,\n    \"instrument_name\" : \"BTC-PERPETUAL\",\n    \"change_id\" : 297217,\n    \"bids\" : [\n      [\n        \"new\",\n        5042.34,\n        30\n      ],\n      [\n        \"new\",\n        5041.94,\n        20\n      ]\n    ],\n    \"asks\" : [\n      [\n        \"new\",\n        5042.64,\n        40\n      ],\n      [\n        \"new\",\n        5043.3,\n        40\n      ]\n    ]\n  }\n  */\n\n\n  _constructLevel2Snapshot(data, market) {\n    const timestampMs = data.timestamp;\n    const sequenceId = data.change_id;\n    const asks = data.asks.map(p => new Level2Point_1.Level2Point(p[1].toFixed(8), p[2].toFixed(8), undefined, {\n      type: p[0]\n    }));\n    const bids = data.bids.map(p => new Level2Point_1.Level2Point(p[1].toFixed(8), p[2].toFixed(8), undefined, {\n      type: p[0]\n    }));\n    return new Level2Snapshots_1.Level2Snapshot({\n      exchange: this.name,\n      base: market.base,\n      quote: market.quote,\n      timestampMs,\n      sequenceId,\n      asks,\n      bids\n    });\n  }\n  /**\n  {\n    \"type\" : \"change\",\n    \"timestamp\" : 1554373911330,\n    \"prev_change_id\" : 297217,\n    \"instrument_name\" : \"BTC-PERPETUAL\",\n    \"change_id\" : 297218,\n    \"bids\" : [\n      [\n        \"delete\",\n        5041.94,\n        0\n      ],\n      [\n        \"delete\",\n        5042.34,\n        0\n      ]\n    ],\n    \"asks\" : [\n     ]\n  }\n  */\n\n\n  _constructLevel2Update(data, market) {\n    const timestampMs = data.timestamp;\n    const lastSequenceId = data.prev_change_id;\n    const sequenceId = data.change_id;\n    const asks = data.asks.map(p => new Level2Point_1.Level2Point(p[1].toFixed(8), p[2].toFixed(2), undefined, {\n      type: p[0]\n    }));\n    const bids = data.bids.map(p => new Level2Point_1.Level2Point(p[1].toFixed(8), p[2].toFixed(2), undefined, {\n      type: p[0]\n    }));\n    return new Level2Snapshots_1.Level2Snapshot({\n      exchange: this.name,\n      base: market.base,\n      quote: market.quote,\n      timestampMs,\n      sequenceId,\n      lastSequenceId,\n      asks,\n      bids\n    });\n  }\n\n}\n\nexports.DeribitClient = DeribitClient;\n\nfunction candlePeriod(period) {\n  switch (period) {\n    case CandlePeriod_1.CandlePeriod._1m:\n      return \"1\";\n\n    case CandlePeriod_1.CandlePeriod._3m:\n      return \"3\";\n\n    case CandlePeriod_1.CandlePeriod._5m:\n      return \"5\";\n\n    case CandlePeriod_1.CandlePeriod._10m:\n      return \"10\";\n\n    case CandlePeriod_1.CandlePeriod._15m:\n      return \"15\";\n\n    case CandlePeriod_1.CandlePeriod._30m:\n      return \"30\";\n\n    case CandlePeriod_1.CandlePeriod._1h:\n      return \"60\";\n\n    case CandlePeriod_1.CandlePeriod._2h:\n      return \"120\";\n\n    case CandlePeriod_1.CandlePeriod._3h:\n      return \"180\";\n\n    case CandlePeriod_1.CandlePeriod._6h:\n      return \"360\";\n\n    case CandlePeriod_1.CandlePeriod._12h:\n      return \"720\";\n\n    case CandlePeriod_1.CandlePeriod._1d:\n      return \"1D\";\n  }\n}","map":{"version":3,"sources":["/Users/Derek/workspace/crypto-visualizer/node_modules/ccxws/src/exchanges/DeribitClient.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/member-ordering */\n/* eslint-disable @typescript-eslint/no-unsafe-call */\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport { BasicClient } from \"../BasicClient\";\nimport { Candle } from \"../Candle\";\nimport { CandlePeriod } from \"../CandlePeriod\";\nimport { ClientOptions } from \"../ClientOptions\";\nimport { CancelableFn } from \"../flowcontrol/Fn\";\nimport { throttle } from \"../flowcontrol/Throttle\";\nimport { Level2Point } from \"../Level2Point\";\nimport { Level2Snapshot } from \"../Level2Snapshots\";\nimport { NotImplementedFn } from \"../NotImplementedFn\";\nimport { Ticker } from \"../Ticker\";\nimport { Trade } from \"../Trade\";\n\nexport class DeribitClient extends BasicClient {\n    public id: number;\n    public candlePeriod: CandlePeriod;\n    protected _send: CancelableFn;\n\n    constructor({ wssPath = \"wss://www.deribit.com/ws/api/v2\", watcherMs }: ClientOptions = {}) {\n        super(wssPath, \"Deribit\", undefined, watcherMs);\n        this.hasTickers = true;\n        this.hasTrades = true;\n        this.hasCandles = true;\n        this.hasLevel2Updates = true;\n        this.id = 0;\n        this.candlePeriod = CandlePeriod._1m;\n        this._send = throttle(this.__send.bind(this), 50);\n    }\n\n    protected _beforeClose() {\n        this._send.cancel();\n    }\n\n    protected __send(message) {\n        this._wss.send(message);\n    }\n\n    protected _sendSubTicker(remote_id) {\n        this._send(\n            JSON.stringify({\n                jsonrpc: \"2.0\",\n                method: \"public/subscribe\",\n                params: {\n                    channels: [`ticker.${remote_id}.raw`],\n                },\n                id: ++this.id,\n            }),\n        );\n    }\n\n    protected _sendUnsubTicker(remote_id) {\n        this._send(\n            JSON.stringify({\n                jsonrpc: \"2.0\",\n                method: \"public/unsubscribe\",\n                params: {\n                    channels: [`ticker.${remote_id}.raw`],\n                },\n                id: ++this.id,\n            }),\n        );\n    }\n\n    protected _sendSubTrades(remote_id) {\n        this._send(\n            JSON.stringify({\n                jsonrpc: \"2.0\",\n                method: \"public/subscribe\",\n                params: {\n                    channels: [`trades.${remote_id}.raw`],\n                },\n                id: ++this.id,\n            }),\n        );\n    }\n\n    protected _sendUnsubTrades(remote_id) {\n        this._send(\n            JSON.stringify({\n                jsonrpc: \"2.0\",\n                method: \"public/unsubscribe\",\n                params: {\n                    channels: [`trades.${remote_id}.raw`],\n                },\n                id: ++this.id,\n            }),\n        );\n    }\n\n    protected _sendSubCandles(remote_id) {\n        this._send(\n            JSON.stringify({\n                jsonrpc: \"2.0\",\n                method: \"public/subscribe\",\n                params: {\n                    channels: [`chart.trades.${remote_id}.${candlePeriod(this.candlePeriod)}`],\n                },\n                id: ++this.id,\n            }),\n        );\n    }\n\n    protected _sendUnsubCandles(remote_id) {\n        this._send(\n            JSON.stringify({\n                jsonrpc: \"2.0\",\n                method: \"public/unsubscribe\",\n                params: {\n                    channels: [`chart.trades.${remote_id}.${candlePeriod(this.candlePeriod)}`],\n                },\n                id: ++this.id,\n            }),\n        );\n    }\n\n    protected _sendSubLevel2Updates(remote_id) {\n        this._send(\n            JSON.stringify({\n                jsonrpc: \"2.0\",\n                method: \"public/subscribe\",\n                params: {\n                    channels: [`book.${remote_id}.raw`],\n                },\n                id: ++this.id,\n            }),\n        );\n    }\n\n    protected _sendUnsubLevel2Updates(remote_id) {\n        this._wss.send(\n            JSON.stringify({\n                jsonrpc: \"2.0\",\n                method: \"public/unsubscribe\",\n                params: {\n                    channels: [`book.${remote_id}.raw`],\n                },\n                id: ++this.id,\n            }),\n        );\n    }\n\n    protected _sendSubLevel2Snapshots = NotImplementedFn;\n    protected _sendUnsubLevel2Snapshots = NotImplementedFn;\n    protected _sendSubLevel3Snapshots = NotImplementedFn;\n    protected _sendUnsubLevel3Snapshots = NotImplementedFn;\n    protected _sendSubLevel3Updates = NotImplementedFn;\n    protected _sendUnsubLevel3Updates = NotImplementedFn;\n\n    protected _onMessage(raw) {\n        const msg = JSON.parse(raw);\n        // console.log(msg);\n\n        // Error?\n        if (!msg.params) {\n            return;\n        }\n\n        // Everything past here should be a channel message\n        const channel = msg.params.channel;\n        if (!channel) {\n            return;\n        }\n\n        // tickers - ticker.{instrument_name}.{interval}\n        if (channel.startsWith(\"ticker\")) {\n            const parts = channel.split(\".\");\n            const market = this._tickerSubs.get(parts[1]);\n            if (!market) return;\n\n            const ticker = this._constructTicker(msg, market);\n            this.emit(\"ticker\", ticker, market);\n            return;\n        }\n\n        // trades - trades.{instrument_name}.{interval}\n        if (channel.startsWith(\"trades\")) {\n            const parts = channel.split(\".\");\n            const market = this._tradeSubs.get(parts[1]);\n            if (!market) return;\n\n            // eslint-disable-next-line prefer-const\n            for (let datum of msg.params.data) {\n                const trade = this._constructTrade(datum, market);\n                this.emit(\"trade\", trade, market);\n            }\n            return;\n        }\n\n        // candle - chart.trades.{instrument_name}.{resolution}\n        if (channel.startsWith(\"chart\")) {\n            const parts = channel.split(\".\");\n            const market = this._candleSubs.get(parts[2]);\n            if (!market) return;\n\n            const candle = this._constructCandle(msg.params.data);\n            this.emit(\"candle\", candle, market);\n            return;\n        }\n\n        // book - book.{instrument_name}.{interval}\n        if (channel.startsWith(\"book\")) {\n            const parts = channel.split(\".\");\n            const market = this._level2UpdateSubs.get(parts[1]);\n            if (!market) return;\n\n            // capture snapshot\n            if (!msg.params.data.prev_change_id) {\n                const snapshot = this._constructLevel2Snapshot(msg.params.data, market);\n                this.emit(\"l2snapshot\", snapshot, market);\n            }\n            // capture update\n            else {\n                const update = this._constructLevel2Update(msg.params.data, market);\n                this.emit(\"l2update\", update, market);\n            }\n            return;\n        }\n    }\n\n    /**\n    {\n      \"jsonrpc\": \"2.0\",\n      \"method\": \"subscription\",\n      \"params\": {\n        \"channel\": \"ticker.BTC-PERPETUAL.raw\",\n        \"data\": {\n          \"timestamp\": 1597244851057,\n          \"stats\": {\n            \"volume_usd\": 404775400.0,\n            \"volume\": 35574.05167122,\n            \"price_change\": 0.493,\n            \"low\": 11131.5,\n            \"high\": 11632.5\n          },\n          \"state\": \"open\",\n          \"settlement_price\": 11452.62,\n          \"open_interest\": 117979530,\n          \"min_price\": 11443.06,\n          \"max_price\": 11791.58,\n          \"mark_price\": 11617.8,\n          \"last_price\": 11618.0,\n          \"instrument_name\": \"BTC-PERPETUAL\",\n          \"index_price\": 11609.61,\n          \"funding_8h\": 0.00001212,\n          \"estimated_delivery_price\": 11609.61,\n          \"current_funding\": 0.00020545,\n          \"best_bid_price\": 11618.0,\n          \"best_bid_amount\": 7460.0,\n          \"best_ask_price\": 11618.5,\n          \"best_ask_amount\": 497870.0\n        }\n      }\n    }\n   */\n    protected _constructTicker(msg, market) {\n        const data = msg.params.data;\n        return new Ticker({\n            exchange: this.name,\n            base: market.base,\n            quote: market.quote,\n            timestamp: data.timestamp,\n            last: (data.last_price ? data.last_price : 0).toFixed(8),\n            open: undefined,\n            high: (data.stats.high ? data.stats.high : 0).toFixed(8),\n            low: (data.stats.low ? data.stats.low : 0).toFixed(8),\n            volume: (data.stats.volume ? data.stats.volume : 0).toFixed(8),\n            quoteVolume: undefined,\n            change: undefined,\n            changePercent: (data.stats.price_change ? data.stats.price_change : 0).toFixed(2),\n            ask: (data.best_ask_price ? data.best_ask_price : 0).toFixed(8),\n            askVolume: (data.best_ask_amount ? data.best_ask_amount : 0).toFixed(8),\n            bid: (data.best_bid_price ? data.best_bid_price : 0).toFixed(8),\n            bidVolume: (data.best_bid_amount ? data.best_bid_amount : 0).toFixed(8),\n        });\n    }\n\n    /**\n   * PERPETUAL\n    {\n      \"trade_seq\": 56761222,\n      \"trade_id\": \"88095252\",\n      \"timestamp\": 1597246721811,\n      \"tick_direction\": 3,\n      \"price\": 11576.0,\n      \"mark_price\": 11574.5,\n      \"instrument_name\": \"BTC-PERPETUAL\",\n      \"index_price\": 11567.32,\n      \"direction\": \"buy\",\n      \"amount\": 4310.0\n    }\n   */\n    protected _constructTrade(datum, market) {\n        return new Trade({\n            exchange: this.name,\n            base: market.base,\n            quote: market.quote,\n            tradeId: datum.trade_id,\n            side: datum.direction,\n            unix: datum.timestamp,\n            price: datum.price.toFixed(8),\n            amount: datum.amount.toFixed(8),\n            tradeSeq: datum.trade_seq,\n            blockTradeId: datum.block_trade_id,\n            markPrice: datum.mark_price.toFixed(8),\n            indexPrice: datum.index_price.toFixed(8),\n            liquidation: datum.liquidation,\n            iv: datum.iv,\n            tickDirection: datum.tick_direction,\n        });\n    }\n\n    /**\n    {\n      \"volume\" : 0.05219351,\n      \"tick\" : 1573645080000,\n      \"open\" : 8869.79,\n      \"low\" : 8788.25,\n      \"high\" : 8870.31,\n      \"cost\" : 460,\n      \"close\" : 8791.25\n    },\n   */\n    protected _constructCandle(data) {\n        return new Candle(\n            data.tick,\n            data.open.toFixed(8),\n            data.high.toFixed(8),\n            data.low.toFixed(8),\n            data.close.toFixed(8),\n            data.volume.toFixed(8),\n        );\n    }\n\n    /**\n    {\n      \"type\" : \"snapshot\",\n      \"timestamp\" : 1554373962454,\n      \"instrument_name\" : \"BTC-PERPETUAL\",\n      \"change_id\" : 297217,\n      \"bids\" : [\n        [\n          \"new\",\n          5042.34,\n          30\n        ],\n        [\n          \"new\",\n          5041.94,\n          20\n        ]\n      ],\n      \"asks\" : [\n        [\n          \"new\",\n          5042.64,\n          40\n        ],\n        [\n          \"new\",\n          5043.3,\n          40\n        ]\n      ]\n    }\n   */\n    protected _constructLevel2Snapshot(data, market) {\n        const timestampMs = data.timestamp;\n        const sequenceId = data.change_id;\n\n        const asks = data.asks.map(\n            p => new Level2Point(p[1].toFixed(8), p[2].toFixed(8), undefined, { type: p[0] }),\n        );\n        const bids = data.bids.map(\n            p => new Level2Point(p[1].toFixed(8), p[2].toFixed(8), undefined, { type: p[0] }),\n        );\n\n        return new Level2Snapshot({\n            exchange: this.name,\n            base: market.base,\n            quote: market.quote,\n            timestampMs,\n            sequenceId,\n            asks,\n            bids,\n        });\n    }\n\n    /**\n   {\n      \"type\" : \"change\",\n      \"timestamp\" : 1554373911330,\n      \"prev_change_id\" : 297217,\n      \"instrument_name\" : \"BTC-PERPETUAL\",\n      \"change_id\" : 297218,\n      \"bids\" : [\n        [\n          \"delete\",\n          5041.94,\n          0\n        ],\n        [\n          \"delete\",\n          5042.34,\n          0\n        ]\n      ],\n      \"asks\" : [\n\n      ]\n    }\n   */\n    protected _constructLevel2Update(data, market) {\n        const timestampMs = data.timestamp;\n        const lastSequenceId = data.prev_change_id;\n        const sequenceId = data.change_id;\n\n        const asks = data.asks.map(\n            p => new Level2Point(p[1].toFixed(8), p[2].toFixed(2), undefined, { type: p[0] }),\n        );\n        const bids = data.bids.map(\n            p => new Level2Point(p[1].toFixed(8), p[2].toFixed(2), undefined, { type: p[0] }),\n        );\n\n        return new Level2Snapshot({\n            exchange: this.name,\n            base: market.base,\n            quote: market.quote,\n            timestampMs,\n            sequenceId,\n            lastSequenceId,\n            asks,\n            bids,\n        });\n    }\n}\n\nfunction candlePeriod(period) {\n    switch (period) {\n        case CandlePeriod._1m:\n            return \"1\";\n        case CandlePeriod._3m:\n            return \"3\";\n        case CandlePeriod._5m:\n            return \"5\";\n        case CandlePeriod._10m:\n            return \"10\";\n        case CandlePeriod._15m:\n            return \"15\";\n        case CandlePeriod._30m:\n            return \"30\";\n        case CandlePeriod._1h:\n            return \"60\";\n        case CandlePeriod._2h:\n            return \"120\";\n        case CandlePeriod._3h:\n            return \"180\";\n        case CandlePeriod._6h:\n            return \"360\";\n        case CandlePeriod._12h:\n            return \"720\";\n        case CandlePeriod._1d:\n            return \"1D\";\n    }\n}\n"]},"metadata":{},"sourceType":"script"}