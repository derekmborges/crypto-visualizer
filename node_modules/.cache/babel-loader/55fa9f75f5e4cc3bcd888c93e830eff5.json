{"ast":null,"code":"\"use strict\";\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n\n/* eslint-disable @typescript-eslint/no-implied-eval */\n\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.throttle = exports.Throttle = void 0;\n\nclass Throttle {\n  constructor(fn, delayMs) {\n    this.fn = fn;\n    this.delayMs = delayMs;\n    this._calls = [];\n    this._handle;\n    this.add = this.add.bind(this);\n  }\n\n  add() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    this._calls.push(args);\n\n    if (!this._handle) this._process();\n  }\n\n  cancel() {\n    this._unschedule();\n\n    this._calls = [];\n  }\n\n  _unschedule() {\n    clearTimeout(this._handle);\n    this._handle = undefined;\n  }\n\n  _schedule() {\n    this._handle = setTimeout(this._process.bind(this), this.delayMs);\n\n    if (this._handle.unref) {\n      this._handle.unref();\n    }\n  }\n\n  _process() {\n    this._handle = undefined;\n\n    const args = this._calls.shift();\n\n    if (args) {\n      this.fn(...args);\n\n      this._schedule();\n    }\n  }\n\n}\n\nexports.Throttle = Throttle;\n/**\n * Throttles the function execution to the rate limit specified. This can be\n * used \"enqueue\" a bunch of function executes and limit the rate at which they\n * will be called.\n *\n * @example\n * ```javascript\n * const fn = n => console.log(n, new Date());\n * const delayMs = 1000;\n * const throttledFn = throttle(fn, delayMs);\n * throttledFn(1);\n * throttledFn(2);\n * throttledFn(3);\n * ```\n */\n\nfunction throttle(fn, delayMs) {\n  const inst = new Throttle(fn, delayMs);\n  const add = inst.add.bind(inst);\n  add.cancel = inst.cancel.bind(inst);\n  return add;\n}\n\nexports.throttle = throttle;","map":{"version":3,"sources":["/Users/Derek/workspace/crypto-visualizer/node_modules/ccxws/src/flowcontrol/Throttle.ts"],"names":[],"mappings":";AAAA;;AACA;;AACA;;;;;;;AAIA,MAAa,QAAb,CAAqB;AAIjB,EAAA,WAAA,CAAqB,EAArB,EAAsC,OAAtC,EAAqD;AAAhC,SAAA,EAAA,GAAA,EAAA;AAAiB,SAAA,OAAA,GAAA,OAAA;AAClC,SAAK,MAAL,GAAc,EAAd;AACA,SAAK,OAAL;AACA,SAAK,GAAL,GAAW,KAAK,GAAL,CAAS,IAAT,CAAc,IAAd,CAAX;AACH;;AAEM,EAAA,GAAG,GAAe;AAAA,sCAAX,IAAW;AAAX,MAAA,IAAW;AAAA;;AACrB,SAAK,MAAL,CAAY,IAAZ,CAAiB,IAAjB;;AACA,QAAI,CAAC,KAAK,OAAV,EAAmB,KAAK,QAAL;AACtB;;AAEM,EAAA,MAAM,GAAA;AACT,SAAK,WAAL;;AACA,SAAK,MAAL,GAAc,EAAd;AACH;;AAEO,EAAA,WAAW,GAAA;AACf,IAAA,YAAY,CAAC,KAAK,OAAN,CAAZ;AACA,SAAK,OAAL,GAAe,SAAf;AACH;;AAEO,EAAA,SAAS,GAAA;AACb,SAAK,OAAL,GAAe,UAAU,CAAC,KAAK,QAAL,CAAc,IAAd,CAAmB,IAAnB,CAAD,EAA2B,KAAK,OAAhC,CAAzB;;AACA,QAAI,KAAK,OAAL,CAAa,KAAjB,EAAwB;AACpB,WAAK,OAAL,CAAa,KAAb;AACH;AACJ;;AAEO,EAAA,QAAQ,GAAA;AACZ,SAAK,OAAL,GAAe,SAAf;;AACA,UAAM,IAAI,GAAG,KAAK,MAAL,CAAY,KAAZ,EAAb;;AACA,QAAI,IAAJ,EAAU;AACN,WAAK,EAAL,CAAQ,GAAG,IAAX;;AACA,WAAK,SAAL;AACH;AACJ;;AAvCgB;;AAArB,OAAA,CAAA,QAAA,GAAA,QAAA;AA0CA;;;;;;;;;;;;;;AAcG;;AACH,SAAgB,QAAhB,CAAyB,EAAzB,EAAiC,OAAjC,EAAgD;AAC5C,QAAM,IAAI,GAAG,IAAI,QAAJ,CAAa,EAAb,EAAiB,OAAjB,CAAb;AACA,QAAM,GAAG,GAAG,IAAI,CAAC,GAAL,CAAS,IAAT,CAAc,IAAd,CAAZ;AACA,EAAA,GAAG,CAAC,MAAJ,GAAa,IAAI,CAAC,MAAL,CAAY,IAAZ,CAAiB,IAAjB,CAAb;AACA,SAAO,GAAP;AACH;;AALD,OAAA,CAAA,QAAA,GAAA,QAAA","sourcesContent":["/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-implied-eval */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n\nimport { CancelableFn, Fn } from \"./Fn\";\n\nexport class Throttle {\n    private _calls: any[][];\n    private _handle: NodeJS.Timeout;\n\n    constructor(readonly fn: Fn, readonly delayMs: number) {\n        this._calls = [];\n        this._handle;\n        this.add = this.add.bind(this);\n    }\n\n    public add(...args: any[]) {\n        this._calls.push(args);\n        if (!this._handle) this._process();\n    }\n\n    public cancel() {\n        this._unschedule();\n        this._calls = [];\n    }\n\n    private _unschedule() {\n        clearTimeout(this._handle);\n        this._handle = undefined;\n    }\n\n    private _schedule() {\n        this._handle = setTimeout(this._process.bind(this), this.delayMs);\n        if (this._handle.unref) {\n            this._handle.unref();\n        }\n    }\n\n    private _process() {\n        this._handle = undefined;\n        const args = this._calls.shift();\n        if (args) {\n            this.fn(...args);\n            this._schedule();\n        }\n    }\n}\n\n/**\n * Throttles the function execution to the rate limit specified. This can be\n * used \"enqueue\" a bunch of function executes and limit the rate at which they\n * will be called.\n *\n * @example\n * ```javascript\n * const fn = n => console.log(n, new Date());\n * const delayMs = 1000;\n * const throttledFn = throttle(fn, delayMs);\n * throttledFn(1);\n * throttledFn(2);\n * throttledFn(3);\n * ```\n */\nexport function throttle(fn: Fn, delayMs: number): CancelableFn {\n    const inst = new Throttle(fn, delayMs);\n    const add = inst.add.bind(inst);\n    add.cancel = inst.cancel.bind(inst);\n    return add as CancelableFn;\n}\n"]},"metadata":{},"sourceType":"script"}